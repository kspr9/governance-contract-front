This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repomix on: 2025-01-17T00:46:13.024Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

================================================================
Directory Structure
================================================================
public/
  vite.svg
src/
  assets/
    svelte.svg
    walletContract.json
    walletStorage.json
  lib/
    stores/
      beaconStore.svelte.ts
      contractStore.svelte.ts
      tzktStorage.svelte.ts
      wallet.ts
    beaconWallet.ts
    ContractAdmin.svelte
    ContractLoader.svelte
    ContractOps.svelte
    Counter.svelte
    Taq.svelte
    TestGlobal.svelte
    utils.ts
    WalletConnector.svelte
    WalletConnectorBeacon.svelte
  app.css
  App.svelte
  main.ts
  vite-env.d.ts
.gitignore
components.json
index.html
package.json
postcss.config.js
README.md
svelte.config.js
tailwind.config.ts
tsconfig.json
tsconfig.node.json
vite.config.d.ts
vite.config.ts

================================================================
Files
================================================================

================
File: public/vite.svg
================
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="31.88" height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 257"><defs><linearGradient id="IconifyId1813088fe1fbc01fb466" x1="-.828%" x2="57.636%" y1="7.652%" y2="78.411%"><stop offset="0%" stop-color="#41D1FF"></stop><stop offset="100%" stop-color="#BD34FE"></stop></linearGradient><linearGradient id="IconifyId1813088fe1fbc01fb467" x1="43.376%" x2="50.316%" y1="2.242%" y2="89.03%"><stop offset="0%" stop-color="#FFEA83"></stop><stop offset="8.333%" stop-color="#FFDD35"></stop><stop offset="100%" stop-color="#FFA800"></stop></linearGradient></defs><path fill="url(#IconifyId1813088fe1fbc01fb466)" d="M255.153 37.938L134.897 252.976c-2.483 4.44-8.862 4.466-11.382.048L.875 37.958c-2.746-4.814 1.371-10.646 6.827-9.67l120.385 21.517a6.537 6.537 0 0 0 2.322-.004l117.867-21.483c5.438-.991 9.574 4.796 6.877 9.62Z"></path><path fill="url(#IconifyId1813088fe1fbc01fb467)" d="M185.432.063L96.44 17.501a3.268 3.268 0 0 0-2.634 3.014l-5.474 92.456a3.268 3.268 0 0 0 3.997 3.378l24.777-5.718c2.318-.535 4.413 1.507 3.936 3.838l-7.361 36.047c-.495 2.426 1.782 4.5 4.151 3.78l15.304-4.649c2.372-.72 4.652 1.36 4.15 3.788l-11.698 56.621c-.732 3.542 3.979 5.473 5.943 2.437l1.313-2.028l72.516-144.72c1.215-2.423-.88-5.186-3.54-4.672l-25.505 4.922c-2.396.462-4.435-1.77-3.759-4.114l16.646-57.705c.677-2.35-1.37-4.583-3.769-4.113Z"></path></svg>

================
File: src/assets/svelte.svg
================
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="26.6" height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 308"><path fill="#FF3E00" d="M239.682 40.707C211.113-.182 154.69-12.301 113.895 13.69L42.247 59.356a82.198 82.198 0 0 0-37.135 55.056a86.566 86.566 0 0 0 8.536 55.576a82.425 82.425 0 0 0-12.296 30.719a87.596 87.596 0 0 0 14.964 66.244c28.574 40.893 84.997 53.007 125.787 27.016l71.648-45.664a82.182 82.182 0 0 0 37.135-55.057a86.601 86.601 0 0 0-8.53-55.577a82.409 82.409 0 0 0 12.29-30.718a87.573 87.573 0 0 0-14.963-66.244"></path><path fill="#FFF" d="M106.889 270.841c-23.102 6.007-47.497-3.036-61.103-22.648a52.685 52.685 0 0 1-9.003-39.85a49.978 49.978 0 0 1 1.713-6.693l1.35-4.115l3.671 2.697a92.447 92.447 0 0 0 28.036 14.007l2.663.808l-.245 2.659a16.067 16.067 0 0 0 2.89 10.656a17.143 17.143 0 0 0 18.397 6.828a15.786 15.786 0 0 0 4.403-1.935l71.67-45.672a14.922 14.922 0 0 0 6.734-9.977a15.923 15.923 0 0 0-2.713-12.011a17.156 17.156 0 0 0-18.404-6.832a15.78 15.78 0 0 0-4.396 1.933l-27.35 17.434a52.298 52.298 0 0 1-14.553 6.391c-23.101 6.007-47.497-3.036-61.101-22.649a52.681 52.681 0 0 1-9.004-39.849a49.428 49.428 0 0 1 22.34-33.114l71.664-45.677a52.218 52.218 0 0 1 14.563-6.398c23.101-6.007 47.497 3.036 61.101 22.648a52.685 52.685 0 0 1 9.004 39.85a50.559 50.559 0 0 1-1.713 6.692l-1.35 4.116l-3.67-2.693a92.373 92.373 0 0 0-28.037-14.013l-2.664-.809l.246-2.658a16.099 16.099 0 0 0-2.89-10.656a17.143 17.143 0 0 0-18.398-6.828a15.786 15.786 0 0 0-4.402 1.935l-71.67 45.674a14.898 14.898 0 0 0-6.73 9.975a15.9 15.9 0 0 0 2.709 12.012a17.156 17.156 0 0 0 18.404 6.832a15.841 15.841 0 0 0 4.402-1.935l27.345-17.427a52.147 52.147 0 0 1 14.552-6.397c23.101-6.006 47.497 3.037 61.102 22.65a52.681 52.681 0 0 1 9.003 39.848a49.453 49.453 0 0 1-22.34 33.12l-71.664 45.673a52.218 52.218 0 0 1-14.563 6.398"></path></svg>

================
File: src/assets/walletContract.json
================
[
  {
    "prim": "parameter",
    "args": [
      {
        "prim": "or",
        "args": [
          {
            "prim": "or",
            "args": [
              {
                "prim": "or",
                "args": [
                  {
                    "prim": "pair",
                    "args": [
                      {
                        "prim": "bool",
                        "annots": [
                          "%all_shares_issued"
                        ]
                      },
                      {
                        "prim": "pair",
                        "args": [
                          {
                            "prim": "nat",
                            "annots": [
                              "%issued_shares"
                            ]
                          },
                          {
                            "prim": "pair",
                            "args": [
                              {
                                "prim": "nat",
                                "annots": [
                                  "%max_shares"
                                ]
                              },
                              {
                                "prim": "nat",
                                "annots": [
                                  "%registry_number"
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "annots": [
                      "%add_company_data"
                    ]
                  },
                  {
                    "prim": "pair",
                    "args": [
                      {
                        "prim": "nat",
                        "annots": [
                          "%amount"
                        ]
                      },
                      {
                        "prim": "address",
                        "annots": [
                          "%owner_address"
                        ]
                      }
                    ],
                    "annots": [
                      "%add_share_owner"
                    ]
                  }
                ]
              },
              {
                "prim": "or",
                "args": [
                  {
                    "prim": "address",
                    "annots": [
                      "%change_admin"
                    ]
                  },
                  {
                    "prim": "or",
                    "args": [
                      {
                        "prim": "nat",
                        "annots": [
                          "%change_max_shares"
                        ]
                      },
                      {
                        "prim": "address",
                        "annots": [
                          "%claim_shares"
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "prim": "or",
            "args": [
              {
                "prim": "or",
                "args": [
                  {
                    "prim": "nat",
                    "annots": [
                      "%issue_shares_unclaimed2"
                    ]
                  },
                  {
                    "prim": "pair",
                    "args": [
                      {
                        "prim": "address",
                        "annots": [
                          "%issuer"
                        ]
                      },
                      {
                        "prim": "ticket",
                        "args": [
                          {
                            "prim": "nat"
                          }
                        ],
                        "annots": [
                          "%ticket"
                        ]
                      }
                    ],
                    "annots": [
                      "%receive_claimed_shares"
                    ]
                  }
                ]
              },
              {
                "prim": "or",
                "args": [
                  {
                    "prim": "address",
                    "annots": [
                      "%remove_share_owner"
                    ]
                  },
                  {
                    "prim": "or",
                    "args": [
                      {
                        "prim": "unit",
                        "annots": [
                          "%send_issued_shares"
                        ]
                      },
                      {
                        "prim": "pair",
                        "args": [
                          {
                            "prim": "nat",
                            "annots": [
                              "%amount"
                            ]
                          },
                          {
                            "prim": "pair",
                            "args": [
                              {
                                "prim": "address",
                                "annots": [
                                  "%destination"
                                ]
                              },
                              {
                                "prim": "address",
                                "annots": [
                                  "%share"
                                ]
                              }
                            ]
                          }
                        ],
                        "annots": [
                          "%transfer_shares"
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "prim": "storage",
    "args": [
      {
        "prim": "pair",
        "args": [
          {
            "prim": "address",
            "annots": [
              "%admin_address"
            ]
          },
          {
            "prim": "pair",
            "args": [
              {
                "prim": "bool",
                "annots": [
                  "%all_shares_issued"
                ]
              },
              {
                "prim": "pair",
                "args": [
                  {
                    "prim": "nat",
                    "annots": [
                      "%allocated_shares"
                    ]
                  },
                  {
                    "prim": "pair",
                    "args": [
                      {
                        "prim": "nat",
                        "annots": [
                          "%issued_shares"
                        ]
                      },
                      {
                        "prim": "pair",
                        "args": [
                          {
                            "prim": "map",
                            "args": [
                              {
                                "prim": "nat"
                              },
                              {
                                "prim": "ticket",
                                "args": [
                                  {
                                    "prim": "nat"
                                  }
                                ]
                              }
                            ],
                            "annots": [
                              "%issued_unclaimed_shares2"
                            ]
                          },
                          {
                            "prim": "pair",
                            "args": [
                              {
                                "prim": "option",
                                "args": [
                                  {
                                    "prim": "nat"
                                  }
                                ],
                                "annots": [
                                  "%max_shares"
                                ]
                              },
                              {
                                "prim": "pair",
                                "args": [
                                  {
                                    "prim": "map",
                                    "args": [
                                      {
                                        "prim": "address"
                                      },
                                      {
                                        "prim": "nat"
                                      }
                                    ],
                                    "annots": [
                                      "%owners_map"
                                    ]
                                  },
                                  {
                                    "prim": "pair",
                                    "args": [
                                      {
                                        "prim": "option",
                                        "args": [
                                          {
                                            "prim": "nat"
                                          }
                                        ],
                                        "annots": [
                                          "%registry_number"
                                        ]
                                      },
                                      {
                                        "prim": "map",
                                        "args": [
                                          {
                                            "prim": "address"
                                          },
                                          {
                                            "prim": "ticket",
                                            "args": [
                                              {
                                                "prim": "nat"
                                              }
                                            ]
                                          }
                                        ],
                                        "annots": [
                                          "%share_balances"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "prim": "code",
    "args": [
      [
        {
          "prim": "UNPAIR"
        },
        {
          "prim": "IF_LEFT",
          "args": [
            [
              {
                "prim": "IF_LEFT",
                "args": [
                  [
                    {
                      "prim": "IF_LEFT",
                      "args": [
                        [
                          {
                            "prim": "SWAP"
                          },
                          {
                            "prim": "UNPAIR",
                            "args": [
                              {
                                "int": "9"
                              }
                            ]
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "5"
                              }
                            ]
                          },
                          {
                            "prim": "DROP"
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "6"
                              }
                            ]
                          },
                          {
                            "prim": "DROP"
                          },
                          {
                            "prim": "DUP"
                          },
                          {
                            "prim": "SENDER"
                          },
                          {
                            "prim": "COMPARE"
                          },
                          {
                            "prim": "EQ"
                          },
                          {
                            "prim": "IF",
                            "args": [
                              [],
                              [
                                {
                                  "prim": "PUSH",
                                  "args": [
                                    {
                                      "prim": "string"
                                    },
                                    {
                                      "string": "Caller not Admin"
                                    }
                                  ]
                                },
                                {
                                  "prim": "FAILWITH"
                                }
                              ]
                            ]
                          },
                          {
                            "prim": "DUP",
                            "args": [
                              {
                                "int": "8"
                              }
                            ]
                          },
                          {
                            "prim": "GET",
                            "args": [
                              {
                                "int": "6"
                              }
                            ]
                          },
                          {
                            "prim": "SOME"
                          },
                          {
                            "prim": "DUG",
                            "args": [
                              {
                                "int": "6"
                              }
                            ]
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "8"
                              }
                            ]
                          },
                          {
                            "prim": "GET",
                            "args": [
                              {
                                "int": "5"
                              }
                            ]
                          },
                          {
                            "prim": "SOME"
                          },
                          {
                            "prim": "DUG",
                            "args": [
                              {
                                "int": "5"
                              }
                            ]
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "8"
                              }
                            ]
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "8"
                              }
                            ]
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "7"
                              }
                            ]
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "6"
                              }
                            ]
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "5"
                              }
                            ]
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "4"
                              }
                            ]
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "3"
                              }
                            ]
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "2"
                              }
                            ]
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "SWAP"
                          },
                          {
                            "prim": "PAIR"
                          }
                        ],
                        [
                          {
                            "prim": "SWAP"
                          },
                          {
                            "prim": "UNPAIR",
                            "args": [
                              {
                                "int": "9"
                              }
                            ]
                          },
                          {
                            "prim": "DUP"
                          },
                          {
                            "prim": "SENDER"
                          },
                          {
                            "prim": "COMPARE"
                          },
                          {
                            "prim": "EQ"
                          },
                          {
                            "prim": "IF",
                            "args": [
                              [],
                              [
                                {
                                  "prim": "PUSH",
                                  "args": [
                                    {
                                      "prim": "string"
                                    },
                                    {
                                      "string": "Caller not Admin"
                                    }
                                  ]
                                },
                                {
                                  "prim": "FAILWITH"
                                }
                              ]
                            ]
                          },
                          {
                            "prim": "PUSH",
                            "args": [
                              {
                                "prim": "nat"
                              },
                              {
                                "int": "0"
                              }
                            ]
                          },
                          {
                            "prim": "DUP",
                            "args": [
                              {
                                "int": "8"
                              }
                            ]
                          },
                          {
                            "prim": "ITER",
                            "args": [
                              [
                                {
                                  "prim": "CDR"
                                },
                                {
                                  "prim": "ADD"
                                }
                              ]
                            ]
                          },
                          {
                            "prim": "DUP",
                            "args": [
                              {
                                "int": "5"
                              }
                            ]
                          },
                          {
                            "prim": "SWAP"
                          },
                          {
                            "prim": "DUP",
                            "args": [
                              {
                                "int": "12"
                              }
                            ]
                          },
                          {
                            "prim": "CAR"
                          },
                          {
                            "prim": "ADD"
                          },
                          {
                            "prim": "COMPARE"
                          },
                          {
                            "prim": "LE"
                          },
                          {
                            "prim": "IF",
                            "args": [
                              [],
                              [
                                {
                                  "prim": "PUSH",
                                  "args": [
                                    {
                                      "prim": "string"
                                    },
                                    {
                                      "string": "Not enough shares issued to allocate this many shares to an owner. Issue more shares or allocate less"
                                    }
                                  ]
                                },
                                {
                                  "prim": "FAILWITH"
                                }
                              ]
                            ]
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "6"
                              }
                            ]
                          },
                          {
                            "prim": "DUP",
                            "args": [
                              {
                                "int": "10"
                              }
                            ]
                          },
                          {
                            "prim": "CAR"
                          },
                          {
                            "prim": "SOME"
                          },
                          {
                            "prim": "DUP",
                            "args": [
                              {
                                "int": "11"
                              }
                            ]
                          },
                          {
                            "prim": "CDR"
                          },
                          {
                            "prim": "UPDATE"
                          },
                          {
                            "prim": "DUG",
                            "args": [
                              {
                                "int": "6"
                              }
                            ]
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "2"
                              }
                            ]
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "9"
                              }
                            ]
                          },
                          {
                            "prim": "CAR"
                          },
                          {
                            "prim": "ADD"
                          },
                          {
                            "prim": "DUG",
                            "args": [
                              {
                                "int": "2"
                              }
                            ]
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "8"
                              }
                            ]
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "8"
                              }
                            ]
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "7"
                              }
                            ]
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "6"
                              }
                            ]
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "5"
                              }
                            ]
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "4"
                              }
                            ]
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "3"
                              }
                            ]
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "2"
                              }
                            ]
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "SWAP"
                          },
                          {
                            "prim": "PAIR"
                          }
                        ]
                      ]
                    },
                    {
                      "prim": "NIL",
                      "args": [
                        {
                          "prim": "operation"
                        }
                      ]
                    }
                  ],
                  [
                    {
                      "prim": "IF_LEFT",
                      "args": [
                        [
                          {
                            "prim": "SWAP"
                          },
                          {
                            "prim": "UNPAIR",
                            "args": [
                              {
                                "int": "9"
                              }
                            ]
                          },
                          {
                            "prim": "SENDER"
                          },
                          {
                            "prim": "COMPARE"
                          },
                          {
                            "prim": "EQ"
                          },
                          {
                            "prim": "IF",
                            "args": [
                              [],
                              [
                                {
                                  "prim": "PUSH",
                                  "args": [
                                    {
                                      "prim": "string"
                                    },
                                    {
                                      "string": "Caller not Admin"
                                    }
                                  ]
                                },
                                {
                                  "prim": "FAILWITH"
                                }
                              ]
                            ]
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "8"
                              }
                            ]
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "8"
                              }
                            ]
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "8"
                              }
                            ]
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "7"
                              }
                            ]
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "6"
                              }
                            ]
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "5"
                              }
                            ]
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "4"
                              }
                            ]
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "3"
                              }
                            ]
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "2"
                              }
                            ]
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "SWAP"
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "NIL",
                            "args": [
                              {
                                "prim": "operation"
                              }
                            ]
                          }
                        ],
                        [
                          {
                            "prim": "IF_LEFT",
                            "args": [
                              [
                                {
                                  "prim": "SWAP"
                                },
                                {
                                  "prim": "UNPAIR",
                                  "args": [
                                    {
                                      "int": "9"
                                    }
                                  ]
                                },
                                {
                                  "prim": "DIG",
                                  "args": [
                                    {
                                      "int": "5"
                                    }
                                  ]
                                },
                                {
                                  "prim": "DROP"
                                },
                                {
                                  "prim": "DUP"
                                },
                                {
                                  "prim": "SENDER"
                                },
                                {
                                  "prim": "COMPARE"
                                },
                                {
                                  "prim": "EQ"
                                },
                                {
                                  "prim": "IF",
                                  "args": [
                                    [],
                                    [
                                      {
                                        "prim": "PUSH",
                                        "args": [
                                          {
                                            "prim": "string"
                                          },
                                          {
                                            "string": "Caller not Admin"
                                          }
                                        ]
                                      },
                                      {
                                        "prim": "FAILWITH"
                                      }
                                    ]
                                  ]
                                },
                                {
                                  "prim": "DIG",
                                  "args": [
                                    {
                                      "int": "8"
                                    }
                                  ]
                                },
                                {
                                  "prim": "SOME"
                                },
                                {
                                  "prim": "DUG",
                                  "args": [
                                    {
                                      "int": "5"
                                    }
                                  ]
                                },
                                {
                                  "prim": "DIG",
                                  "args": [
                                    {
                                      "int": "8"
                                    }
                                  ]
                                },
                                {
                                  "prim": "DIG",
                                  "args": [
                                    {
                                      "int": "8"
                                    }
                                  ]
                                },
                                {
                                  "prim": "PAIR"
                                },
                                {
                                  "prim": "DIG",
                                  "args": [
                                    {
                                      "int": "7"
                                    }
                                  ]
                                },
                                {
                                  "prim": "PAIR"
                                },
                                {
                                  "prim": "DIG",
                                  "args": [
                                    {
                                      "int": "6"
                                    }
                                  ]
                                },
                                {
                                  "prim": "PAIR"
                                },
                                {
                                  "prim": "DIG",
                                  "args": [
                                    {
                                      "int": "5"
                                    }
                                  ]
                                },
                                {
                                  "prim": "PAIR"
                                },
                                {
                                  "prim": "DIG",
                                  "args": [
                                    {
                                      "int": "4"
                                    }
                                  ]
                                },
                                {
                                  "prim": "PAIR"
                                },
                                {
                                  "prim": "DIG",
                                  "args": [
                                    {
                                      "int": "3"
                                    }
                                  ]
                                },
                                {
                                  "prim": "PAIR"
                                },
                                {
                                  "prim": "DIG",
                                  "args": [
                                    {
                                      "int": "2"
                                    }
                                  ]
                                },
                                {
                                  "prim": "PAIR"
                                },
                                {
                                  "prim": "SWAP"
                                },
                                {
                                  "prim": "PAIR"
                                },
                                {
                                  "prim": "NIL",
                                  "args": [
                                    {
                                      "prim": "operation"
                                    }
                                  ]
                                }
                              ],
                              [
                                {
                                  "prim": "CONTRACT",
                                  "args": [
                                    {
                                      "prim": "unit"
                                    }
                                  ],
                                  "annots": [
                                    "%send_issued_shares"
                                  ]
                                },
                                {
                                  "prim": "IF_NONE",
                                  "args": [
                                    [
                                      {
                                        "prim": "PUSH",
                                        "args": [
                                          {
                                            "prim": "int"
                                          },
                                          {
                                            "int": "160"
                                          }
                                        ]
                                      },
                                      {
                                        "prim": "FAILWITH"
                                      }
                                    ],
                                    []
                                  ]
                                },
                                {
                                  "prim": "NIL",
                                  "args": [
                                    {
                                      "prim": "operation"
                                    }
                                  ]
                                },
                                {
                                  "prim": "SWAP"
                                },
                                {
                                  "prim": "PUSH",
                                  "args": [
                                    {
                                      "prim": "mutez"
                                    },
                                    {
                                      "int": "0"
                                    }
                                  ]
                                },
                                {
                                  "prim": "UNIT"
                                },
                                {
                                  "prim": "TRANSFER_TOKENS"
                                },
                                {
                                  "prim": "CONS"
                                }
                              ]
                            ]
                          }
                        ]
                      ]
                    }
                  ]
                ]
              }
            ],
            [
              {
                "prim": "IF_LEFT",
                "args": [
                  [
                    {
                      "prim": "IF_LEFT",
                      "args": [
                        [
                          {
                            "prim": "SWAP"
                          },
                          {
                            "prim": "UNPAIR",
                            "args": [
                              {
                                "int": "9"
                              }
                            ]
                          },
                          {
                            "prim": "DUP",
                            "args": [
                              {
                                "int": "8"
                              }
                            ]
                          },
                          {
                            "prim": "IF_NONE",
                            "args": [
                              [
                                {
                                  "prim": "PUSH",
                                  "args": [
                                    {
                                      "prim": "string"
                                    },
                                    {
                                      "string": "No registry number in storage"
                                    }
                                  ]
                                },
                                {
                                  "prim": "FAILWITH"
                                }
                              ],
                              [
                                {
                                  "prim": "DROP"
                                }
                              ]
                            ]
                          },
                          {
                            "prim": "DUP",
                            "args": [
                              {
                                "int": "8"
                              }
                            ]
                          },
                          {
                            "prim": "IF_NONE",
                            "args": [
                              [
                                {
                                  "prim": "PUSH",
                                  "args": [
                                    {
                                      "prim": "int"
                                    },
                                    {
                                      "int": "70"
                                    }
                                  ]
                                },
                                {
                                  "prim": "FAILWITH"
                                }
                              ],
                              []
                            ]
                          },
                          {
                            "prim": "DUP",
                            "args": [
                              {
                                "int": "7"
                              }
                            ]
                          },
                          {
                            "prim": "IF_NONE",
                            "args": [
                              [
                                {
                                  "prim": "PUSH",
                                  "args": [
                                    {
                                      "prim": "int"
                                    },
                                    {
                                      "int": "73"
                                    }
                                  ]
                                },
                                {
                                  "prim": "FAILWITH"
                                }
                              ],
                              []
                            ]
                          },
                          {
                            "prim": "DUP",
                            "args": [
                              {
                                "int": "12"
                              }
                            ]
                          },
                          {
                            "prim": "DUP",
                            "args": [
                              {
                                "int": "7"
                              }
                            ]
                          },
                          {
                            "prim": "ADD"
                          },
                          {
                            "prim": "COMPARE"
                          },
                          {
                            "prim": "LE"
                          },
                          {
                            "prim": "IF",
                            "args": [
                              [],
                              [
                                {
                                  "prim": "PUSH",
                                  "args": [
                                    {
                                      "prim": "string"
                                    },
                                    {
                                      "string": "Cannot issue this many shares"
                                    }
                                  ]
                                },
                                {
                                  "prim": "FAILWITH"
                                }
                              ]
                            ]
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "5"
                              }
                            ]
                          },
                          {
                            "prim": "NONE",
                            "args": [
                              {
                                "prim": "ticket",
                                "args": [
                                  {
                                    "prim": "nat"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "prim": "PUSH",
                            "args": [
                              {
                                "prim": "nat"
                              },
                              {
                                "int": "0"
                              }
                            ]
                          },
                          {
                            "prim": "GET_AND_UPDATE"
                          },
                          {
                            "prim": "SWAP"
                          },
                          {
                            "prim": "DUP",
                            "args": [
                              {
                                "int": "12"
                              }
                            ]
                          },
                          {
                            "prim": "DUP",
                            "args": [
                              {
                                "int": "4"
                              }
                            ]
                          },
                          {
                            "prim": "TICKET"
                          },
                          {
                            "prim": "IF_NONE",
                            "args": [
                              [
                                {
                                  "prim": "PUSH",
                                  "args": [
                                    {
                                      "prim": "int"
                                    },
                                    {
                                      "int": "90"
                                    }
                                  ]
                                },
                                {
                                  "prim": "FAILWITH"
                                }
                              ],
                              []
                            ]
                          },
                          {
                            "prim": "SOME"
                          },
                          {
                            "prim": "PUSH",
                            "args": [
                              {
                                "prim": "nat"
                              },
                              {
                                "int": "0"
                              }
                            ]
                          },
                          {
                            "prim": "UPDATE"
                          },
                          {
                            "prim": "SWAP"
                          },
                          {
                            "prim": "IF_NONE",
                            "args": [
                              [
                                {
                                  "prim": "SWAP"
                                },
                                {
                                  "prim": "DROP"
                                }
                              ],
                              [
                                {
                                  "prim": "DUP",
                                  "args": [
                                    {
                                      "int": "12"
                                    }
                                  ]
                                },
                                {
                                  "prim": "DIG",
                                  "args": [
                                    {
                                      "int": "3"
                                    }
                                  ]
                                },
                                {
                                  "prim": "TICKET"
                                },
                                {
                                  "prim": "IF_NONE",
                                  "args": [
                                    [
                                      {
                                        "prim": "PUSH",
                                        "args": [
                                          {
                                            "prim": "int"
                                          },
                                          {
                                            "int": "96"
                                          }
                                        ]
                                      },
                                      {
                                        "prim": "FAILWITH"
                                      }
                                    ],
                                    []
                                  ]
                                },
                                {
                                  "prim": "SWAP"
                                },
                                {
                                  "prim": "PAIR"
                                },
                                {
                                  "prim": "JOIN_TICKETS"
                                },
                                {
                                  "prim": "IF_NONE",
                                  "args": [
                                    [
                                      {
                                        "prim": "PUSH",
                                        "args": [
                                          {
                                            "prim": "int"
                                          },
                                          {
                                            "int": "100"
                                          }
                                        ]
                                      },
                                      {
                                        "prim": "FAILWITH"
                                      }
                                    ],
                                    []
                                  ]
                                },
                                {
                                  "prim": "SOME"
                                },
                                {
                                  "prim": "PUSH",
                                  "args": [
                                    {
                                      "prim": "nat"
                                    },
                                    {
                                      "int": "0"
                                    }
                                  ]
                                },
                                {
                                  "prim": "UPDATE"
                                }
                              ]
                            ]
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "4"
                              }
                            ]
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "9"
                              }
                            ]
                          },
                          {
                            "prim": "ADD"
                          },
                          {
                            "prim": "DUG",
                            "args": [
                              {
                                "int": "4"
                              }
                            ]
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "8"
                              }
                            ]
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "8"
                              }
                            ]
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "7"
                              }
                            ]
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "6"
                              }
                            ]
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "SWAP"
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "4"
                              }
                            ]
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "3"
                              }
                            ]
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "2"
                              }
                            ]
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "SWAP"
                          },
                          {
                            "prim": "PAIR"
                          }
                        ],
                        [
                          {
                            "prim": "UNPAIR"
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "2"
                              }
                            ]
                          },
                          {
                            "prim": "UNPAIR",
                            "args": [
                              {
                                "int": "9"
                              }
                            ]
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "8"
                              }
                            ]
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "10"
                              }
                            ]
                          },
                          {
                            "prim": "SOME"
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "10"
                              }
                            ]
                          },
                          {
                            "prim": "UPDATE"
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "8"
                              }
                            ]
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "7"
                              }
                            ]
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "6"
                              }
                            ]
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "5"
                              }
                            ]
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "4"
                              }
                            ]
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "3"
                              }
                            ]
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "2"
                              }
                            ]
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "SWAP"
                          },
                          {
                            "prim": "PAIR"
                          }
                        ]
                      ]
                    },
                    {
                      "prim": "NIL",
                      "args": [
                        {
                          "prim": "operation"
                        }
                      ]
                    }
                  ],
                  [
                    {
                      "prim": "IF_LEFT",
                      "args": [
                        [
                          {
                            "prim": "SWAP"
                          },
                          {
                            "prim": "UNPAIR",
                            "args": [
                              {
                                "int": "9"
                              }
                            ]
                          },
                          {
                            "prim": "DUP"
                          },
                          {
                            "prim": "SENDER"
                          },
                          {
                            "prim": "COMPARE"
                          },
                          {
                            "prim": "EQ"
                          },
                          {
                            "prim": "IF",
                            "args": [
                              [],
                              [
                                {
                                  "prim": "PUSH",
                                  "args": [
                                    {
                                      "prim": "string"
                                    },
                                    {
                                      "string": "Caller not Admin"
                                    }
                                  ]
                                },
                                {
                                  "prim": "FAILWITH"
                                }
                              ]
                            ]
                          },
                          {
                            "prim": "DUP",
                            "args": [
                              {
                                "int": "7"
                              }
                            ]
                          },
                          {
                            "prim": "DUP",
                            "args": [
                              {
                                "int": "11"
                              }
                            ]
                          },
                          {
                            "prim": "GET"
                          },
                          {
                            "prim": "IF_NONE",
                            "args": [
                              [
                                {
                                  "prim": "PUSH",
                                  "args": [
                                    {
                                      "prim": "int"
                                    },
                                    {
                                      "int": "119"
                                    }
                                  ]
                                },
                                {
                                  "prim": "FAILWITH"
                                }
                              ],
                              []
                            ]
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "7"
                              }
                            ]
                          },
                          {
                            "prim": "NONE",
                            "args": [
                              {
                                "prim": "nat"
                              }
                            ]
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "11"
                              }
                            ]
                          },
                          {
                            "prim": "UPDATE"
                          },
                          {
                            "prim": "DUG",
                            "args": [
                              {
                                "int": "7"
                              }
                            ]
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "3"
                              }
                            ]
                          },
                          {
                            "prim": "SUB"
                          },
                          {
                            "prim": "ISNAT"
                          },
                          {
                            "prim": "IF_NONE",
                            "args": [
                              [
                                {
                                  "prim": "PUSH",
                                  "args": [
                                    {
                                      "prim": "int"
                                    },
                                    {
                                      "int": "121"
                                    }
                                  ]
                                },
                                {
                                  "prim": "FAILWITH"
                                }
                              ],
                              []
                            ]
                          },
                          {
                            "prim": "DUG",
                            "args": [
                              {
                                "int": "2"
                              }
                            ]
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "8"
                              }
                            ]
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "8"
                              }
                            ]
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "7"
                              }
                            ]
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "6"
                              }
                            ]
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "5"
                              }
                            ]
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "4"
                              }
                            ]
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "3"
                              }
                            ]
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "DIG",
                            "args": [
                              {
                                "int": "2"
                              }
                            ]
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "SWAP"
                          },
                          {
                            "prim": "PAIR"
                          },
                          {
                            "prim": "NIL",
                            "args": [
                              {
                                "prim": "operation"
                              }
                            ]
                          }
                        ],
                        [
                          {
                            "prim": "IF_LEFT",
                            "args": [
                              [
                                {
                                  "prim": "NIL",
                                  "args": [
                                    {
                                      "prim": "operation"
                                    }
                                  ]
                                },
                                {
                                  "prim": "DIG",
                                  "args": [
                                    {
                                      "int": "2"
                                    }
                                  ]
                                },
                                {
                                  "prim": "UNPAIR",
                                  "args": [
                                    {
                                      "int": "9"
                                    }
                                  ]
                                },
                                {
                                  "prim": "DUP",
                                  "args": [
                                    {
                                      "int": "7"
                                    }
                                  ]
                                },
                                {
                                  "prim": "SENDER"
                                },
                                {
                                  "prim": "MEM"
                                },
                                {
                                  "prim": "IF",
                                  "args": [
                                    [],
                                    [
                                      {
                                        "prim": "PUSH",
                                        "args": [
                                          {
                                            "prim": "string"
                                          },
                                          {
                                            "string": "Wallet not eligible claiming any shares"
                                          }
                                        ]
                                      },
                                      {
                                        "prim": "FAILWITH"
                                      }
                                    ]
                                  ]
                                },
                                {
                                  "prim": "PUSH",
                                  "args": [
                                    {
                                      "prim": "nat"
                                    },
                                    {
                                      "int": "0"
                                    }
                                  ]
                                },
                                {
                                  "prim": "DUP",
                                  "args": [
                                    {
                                      "int": "8"
                                    }
                                  ]
                                },
                                {
                                  "prim": "SENDER"
                                },
                                {
                                  "prim": "GET"
                                },
                                {
                                  "prim": "IF_NONE",
                                  "args": [
                                    [
                                      {
                                        "prim": "PUSH",
                                        "args": [
                                          {
                                            "prim": "int"
                                          },
                                          {
                                            "int": "133"
                                          }
                                        ]
                                      },
                                      {
                                        "prim": "FAILWITH"
                                      }
                                    ],
                                    []
                                  ]
                                },
                                {
                                  "prim": "COMPARE"
                                },
                                {
                                  "prim": "GT"
                                },
                                {
                                  "prim": "IF",
                                  "args": [
                                    [],
                                    [
                                      {
                                        "prim": "PUSH",
                                        "args": [
                                          {
                                            "prim": "string"
                                          },
                                          {
                                            "string": "Your shares have not been issued yet"
                                          }
                                        ]
                                      },
                                      {
                                        "prim": "FAILWITH"
                                      }
                                    ]
                                  ]
                                },
                                {
                                  "prim": "DUP",
                                  "args": [
                                    {
                                      "int": "7"
                                    }
                                  ]
                                },
                                {
                                  "prim": "SENDER"
                                },
                                {
                                  "prim": "GET"
                                },
                                {
                                  "prim": "IF_NONE",
                                  "args": [
                                    [
                                      {
                                        "prim": "PUSH",
                                        "args": [
                                          {
                                            "prim": "int"
                                          },
                                          {
                                            "int": "136"
                                          }
                                        ]
                                      },
                                      {
                                        "prim": "FAILWITH"
                                      }
                                    ],
                                    []
                                  ]
                                },
                                {
                                  "prim": "DIG",
                                  "args": [
                                    {
                                      "int": "5"
                                    }
                                  ]
                                },
                                {
                                  "prim": "NONE",
                                  "args": [
                                    {
                                      "prim": "ticket",
                                      "args": [
                                        {
                                          "prim": "nat"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "prim": "PUSH",
                                  "args": [
                                    {
                                      "prim": "nat"
                                    },
                                    {
                                      "int": "0"
                                    }
                                  ]
                                },
                                {
                                  "prim": "GET_AND_UPDATE"
                                },
                                {
                                  "prim": "IF_NONE",
                                  "args": [
                                    [
                                      {
                                        "prim": "SWAP"
                                      },
                                      {
                                        "prim": "DROP"
                                      },
                                      {
                                        "prim": "DIG",
                                        "args": [
                                          {
                                            "int": "10"
                                          }
                                        ]
                                      },
                                      {
                                        "prim": "DROP"
                                      }
                                    ],
                                    [
                                      {
                                        "prim": "DIG",
                                        "args": [
                                          {
                                            "int": "12"
                                          }
                                        ]
                                      },
                                      {
                                        "prim": "DROP"
                                      },
                                      {
                                        "prim": "READ_TICKET"
                                      },
                                      {
                                        "prim": "DIG",
                                        "args": [
                                          {
                                            "int": "3"
                                          }
                                        ]
                                      },
                                      {
                                        "prim": "DUP"
                                      },
                                      {
                                        "prim": "DUP",
                                        "args": [
                                          {
                                            "int": "3"
                                          }
                                        ]
                                      },
                                      {
                                        "prim": "GET",
                                        "args": [
                                          {
                                            "int": "4"
                                          }
                                        ]
                                      },
                                      {
                                        "prim": "SUB"
                                      },
                                      {
                                        "prim": "ISNAT"
                                      },
                                      {
                                        "prim": "IF_NONE",
                                        "args": [
                                          [
                                            {
                                              "prim": "PUSH",
                                              "args": [
                                                {
                                                  "prim": "int"
                                                },
                                                {
                                                  "int": "144"
                                                }
                                              ]
                                            },
                                            {
                                              "prim": "FAILWITH"
                                            }
                                          ],
                                          []
                                        ]
                                      },
                                      {
                                        "prim": "PAIR"
                                      },
                                      {
                                        "prim": "DIG",
                                        "args": [
                                          {
                                            "int": "2"
                                          }
                                        ]
                                      },
                                      {
                                        "prim": "SPLIT_TICKET"
                                      },
                                      {
                                        "prim": "IF_NONE",
                                        "args": [
                                          [
                                            {
                                              "prim": "PUSH",
                                              "args": [
                                                {
                                                  "prim": "int"
                                                },
                                                {
                                                  "int": "144"
                                                }
                                              ]
                                            },
                                            {
                                              "prim": "FAILWITH"
                                            }
                                          ],
                                          []
                                        ]
                                      },
                                      {
                                        "prim": "UNPAIR"
                                      },
                                      {
                                        "prim": "DIG",
                                        "args": [
                                          {
                                            "int": "3"
                                          }
                                        ]
                                      },
                                      {
                                        "prim": "SWAP"
                                      },
                                      {
                                        "prim": "SOME"
                                      },
                                      {
                                        "prim": "PUSH",
                                        "args": [
                                          {
                                            "prim": "nat"
                                          },
                                          {
                                            "int": "0"
                                          }
                                        ]
                                      },
                                      {
                                        "prim": "UPDATE"
                                      },
                                      {
                                        "prim": "DUG",
                                        "args": [
                                          {
                                            "int": "2"
                                          }
                                        ]
                                      },
                                      {
                                        "prim": "SENDER"
                                      },
                                      {
                                        "prim": "CONTRACT",
                                        "args": [
                                          {
                                            "prim": "pair",
                                            "args": [
                                              {
                                                "prim": "address",
                                                "annots": [
                                                  "%issuer"
                                                ]
                                              },
                                              {
                                                "prim": "ticket",
                                                "args": [
                                                  {
                                                    "prim": "nat"
                                                  }
                                                ],
                                                "annots": [
                                                  "%ticket"
                                                ]
                                              }
                                            ]
                                          }
                                        ],
                                        "annots": [
                                          "%receive_claimed_shares"
                                        ]
                                      },
                                      {
                                        "prim": "SWAP"
                                      },
                                      {
                                        "prim": "DIG",
                                        "args": [
                                          {
                                            "int": "2"
                                          }
                                        ]
                                      },
                                      {
                                        "prim": "CAR"
                                      },
                                      {
                                        "prim": "PAIR"
                                      },
                                      {
                                        "prim": "DIG",
                                        "args": [
                                          {
                                            "int": "11"
                                          }
                                        ]
                                      },
                                      {
                                        "prim": "DIG",
                                        "args": [
                                          {
                                            "int": "2"
                                          }
                                        ]
                                      },
                                      {
                                        "prim": "IF_NONE",
                                        "args": [
                                          [
                                            {
                                              "prim": "PUSH",
                                              "args": [
                                                {
                                                  "prim": "int"
                                                },
                                                {
                                                  "int": "154"
                                                }
                                              ]
                                            },
                                            {
                                              "prim": "FAILWITH"
                                            }
                                          ],
                                          []
                                        ]
                                      },
                                      {
                                        "prim": "PUSH",
                                        "args": [
                                          {
                                            "prim": "mutez"
                                          },
                                          {
                                            "int": "0"
                                          }
                                        ]
                                      },
                                      {
                                        "prim": "DIG",
                                        "args": [
                                          {
                                            "int": "3"
                                          }
                                        ]
                                      },
                                      {
                                        "prim": "TRANSFER_TOKENS"
                                      },
                                      {
                                        "prim": "CONS"
                                      },
                                      {
                                        "prim": "DUG",
                                        "args": [
                                          {
                                            "int": "9"
                                          }
                                        ]
                                      }
                                    ]
                                  ]
                                },
                                {
                                  "prim": "DIG",
                                  "args": [
                                    {
                                      "int": "8"
                                    }
                                  ]
                                },
                                {
                                  "prim": "DIG",
                                  "args": [
                                    {
                                      "int": "8"
                                    }
                                  ]
                                },
                                {
                                  "prim": "PAIR"
                                },
                                {
                                  "prim": "DIG",
                                  "args": [
                                    {
                                      "int": "7"
                                    }
                                  ]
                                },
                                {
                                  "prim": "PAIR"
                                },
                                {
                                  "prim": "DIG",
                                  "args": [
                                    {
                                      "int": "6"
                                    }
                                  ]
                                },
                                {
                                  "prim": "PAIR"
                                },
                                {
                                  "prim": "SWAP"
                                },
                                {
                                  "prim": "PAIR"
                                },
                                {
                                  "prim": "DIG",
                                  "args": [
                                    {
                                      "int": "4"
                                    }
                                  ]
                                },
                                {
                                  "prim": "PAIR"
                                },
                                {
                                  "prim": "DIG",
                                  "args": [
                                    {
                                      "int": "3"
                                    }
                                  ]
                                },
                                {
                                  "prim": "PAIR"
                                },
                                {
                                  "prim": "DIG",
                                  "args": [
                                    {
                                      "int": "2"
                                    }
                                  ]
                                },
                                {
                                  "prim": "PAIR"
                                },
                                {
                                  "prim": "SWAP"
                                },
                                {
                                  "prim": "PAIR"
                                },
                                {
                                  "prim": "SWAP"
                                }
                              ],
                              [
                                {
                                  "prim": "NIL",
                                  "args": [
                                    {
                                      "prim": "operation"
                                    }
                                  ]
                                },
                                {
                                  "prim": "DIG",
                                  "args": [
                                    {
                                      "int": "2"
                                    }
                                  ]
                                },
                                {
                                  "prim": "UNPAIR",
                                  "args": [
                                    {
                                      "int": "9"
                                    }
                                  ]
                                },
                                {
                                  "prim": "DUP"
                                },
                                {
                                  "prim": "SENDER"
                                },
                                {
                                  "prim": "COMPARE"
                                },
                                {
                                  "prim": "EQ"
                                },
                                {
                                  "prim": "IF",
                                  "args": [
                                    [],
                                    [
                                      {
                                        "prim": "PUSH",
                                        "args": [
                                          {
                                            "prim": "string"
                                          },
                                          {
                                            "string": "Caller not Admin"
                                          }
                                        ]
                                      },
                                      {
                                        "prim": "FAILWITH"
                                      }
                                    ]
                                  ]
                                },
                                {
                                  "prim": "DIG",
                                  "args": [
                                    {
                                      "int": "8"
                                    }
                                  ]
                                },
                                {
                                  "prim": "NONE",
                                  "args": [
                                    {
                                      "prim": "ticket",
                                      "args": [
                                        {
                                          "prim": "nat"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "prim": "DUP",
                                  "args": [
                                    {
                                      "int": "12"
                                    }
                                  ]
                                },
                                {
                                  "prim": "GET",
                                  "args": [
                                    {
                                      "int": "4"
                                    }
                                  ]
                                },
                                {
                                  "prim": "GET_AND_UPDATE"
                                },
                                {
                                  "prim": "IF_NONE",
                                  "args": [
                                    [
                                      {
                                        "prim": "DIG",
                                        "args": [
                                          {
                                            "int": "10"
                                          }
                                        ]
                                      },
                                      {
                                        "prim": "DROP"
                                      }
                                    ],
                                    [
                                      {
                                        "prim": "READ_TICKET"
                                      },
                                      {
                                        "prim": "PUSH",
                                        "args": [
                                          {
                                            "prim": "nat"
                                          },
                                          {
                                            "int": "1"
                                          }
                                        ]
                                      },
                                      {
                                        "prim": "DUP"
                                      },
                                      {
                                        "prim": "TICKET"
                                      },
                                      {
                                        "prim": "IF_NONE",
                                        "args": [
                                          [
                                            {
                                              "prim": "PUSH",
                                              "args": [
                                                {
                                                  "prim": "int"
                                                },
                                                {
                                                  "int": "191"
                                                }
                                              ]
                                            },
                                            {
                                              "prim": "FAILWITH"
                                            }
                                          ],
                                          [
                                            {
                                              "prim": "DROP"
                                            }
                                          ]
                                        ]
                                      },
                                      {
                                        "prim": "DUP"
                                      },
                                      {
                                        "prim": "GET",
                                        "args": [
                                          {
                                            "int": "4"
                                          }
                                        ]
                                      },
                                      {
                                        "prim": "DUP",
                                        "args": [
                                          {
                                            "int": "14"
                                          }
                                        ]
                                      },
                                      {
                                        "prim": "CAR"
                                      },
                                      {
                                        "prim": "COMPARE"
                                      },
                                      {
                                        "prim": "LT"
                                      },
                                      {
                                        "prim": "IF",
                                        "args": [
                                          [
                                            {
                                              "prim": "DUP",
                                              "args": [
                                                {
                                                  "int": "13"
                                                }
                                              ]
                                            },
                                            {
                                              "prim": "CAR"
                                            },
                                            {
                                              "prim": "DUP",
                                              "args": [
                                                {
                                                  "int": "14"
                                                }
                                              ]
                                            },
                                            {
                                              "prim": "CAR"
                                            },
                                            {
                                              "prim": "DUP",
                                              "args": [
                                                {
                                                  "int": "3"
                                                }
                                              ]
                                            },
                                            {
                                              "prim": "GET",
                                              "args": [
                                                {
                                                  "int": "4"
                                                }
                                              ]
                                            },
                                            {
                                              "prim": "SUB"
                                            },
                                            {
                                              "prim": "ISNAT"
                                            },
                                            {
                                              "prim": "IF_NONE",
                                              "args": [
                                                [
                                                  {
                                                    "prim": "PUSH",
                                                    "args": [
                                                      {
                                                        "prim": "int"
                                                      },
                                                      {
                                                        "int": "195"
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "prim": "FAILWITH"
                                                  }
                                                ],
                                                []
                                              ]
                                            },
                                            {
                                              "prim": "PAIR"
                                            },
                                            {
                                              "prim": "DIG",
                                              "args": [
                                                {
                                                  "int": "2"
                                                }
                                              ]
                                            },
                                            {
                                              "prim": "SPLIT_TICKET"
                                            },
                                            {
                                              "prim": "IF_NONE",
                                              "args": [
                                                [
                                                  {
                                                    "prim": "PUSH",
                                                    "args": [
                                                      {
                                                        "prim": "int"
                                                      },
                                                      {
                                                        "int": "195"
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "prim": "FAILWITH"
                                                  }
                                                ],
                                                []
                                              ]
                                            },
                                            {
                                              "prim": "UNPAIR"
                                            },
                                            {
                                              "prim": "DIG",
                                              "args": [
                                                {
                                                  "int": "3"
                                                }
                                              ]
                                            },
                                            {
                                              "prim": "SWAP"
                                            },
                                            {
                                              "prim": "SOME"
                                            },
                                            {
                                              "prim": "DUP",
                                              "args": [
                                                {
                                                  "int": "4"
                                                }
                                              ]
                                            },
                                            {
                                              "prim": "CAR"
                                            },
                                            {
                                              "prim": "UPDATE"
                                            },
                                            {
                                              "prim": "DUG",
                                              "args": [
                                                {
                                                  "int": "2"
                                                }
                                              ]
                                            }
                                          ],
                                          [
                                            {
                                              "prim": "SWAP"
                                            }
                                          ]
                                        ]
                                      },
                                      {
                                        "prim": "DIG",
                                        "args": [
                                          {
                                            "int": "12"
                                          }
                                        ]
                                      },
                                      {
                                        "prim": "GET",
                                        "args": [
                                          {
                                            "int": "3"
                                          }
                                        ]
                                      },
                                      {
                                        "prim": "CONTRACT",
                                        "args": [
                                          {
                                            "prim": "pair",
                                            "args": [
                                              {
                                                "prim": "address",
                                                "annots": [
                                                  "%issuer"
                                                ]
                                              },
                                              {
                                                "prim": "ticket",
                                                "args": [
                                                  {
                                                    "prim": "nat"
                                                  }
                                                ],
                                                "annots": [
                                                  "%ticket"
                                                ]
                                              }
                                            ]
                                          }
                                        ],
                                        "annots": [
                                          "%receive_claimed_shares"
                                        ]
                                      },
                                      {
                                        "prim": "SWAP"
                                      },
                                      {
                                        "prim": "DIG",
                                        "args": [
                                          {
                                            "int": "2"
                                          }
                                        ]
                                      },
                                      {
                                        "prim": "CAR"
                                      },
                                      {
                                        "prim": "PAIR"
                                      },
                                      {
                                        "prim": "DIG",
                                        "args": [
                                          {
                                            "int": "11"
                                          }
                                        ]
                                      },
                                      {
                                        "prim": "DIG",
                                        "args": [
                                          {
                                            "int": "2"
                                          }
                                        ]
                                      },
                                      {
                                        "prim": "IF_NONE",
                                        "args": [
                                          [
                                            {
                                              "prim": "PUSH",
                                              "args": [
                                                {
                                                  "prim": "int"
                                                },
                                                {
                                                  "int": "210"
                                                }
                                              ]
                                            },
                                            {
                                              "prim": "FAILWITH"
                                            }
                                          ],
                                          []
                                        ]
                                      },
                                      {
                                        "prim": "PUSH",
                                        "args": [
                                          {
                                            "prim": "mutez"
                                          },
                                          {
                                            "int": "0"
                                          }
                                        ]
                                      },
                                      {
                                        "prim": "DIG",
                                        "args": [
                                          {
                                            "int": "3"
                                          }
                                        ]
                                      },
                                      {
                                        "prim": "TRANSFER_TOKENS"
                                      },
                                      {
                                        "prim": "CONS"
                                      },
                                      {
                                        "prim": "DUG",
                                        "args": [
                                          {
                                            "int": "9"
                                          }
                                        ]
                                      }
                                    ]
                                  ]
                                },
                                {
                                  "prim": "DIG",
                                  "args": [
                                    {
                                      "int": "8"
                                    }
                                  ]
                                },
                                {
                                  "prim": "PAIR"
                                },
                                {
                                  "prim": "DIG",
                                  "args": [
                                    {
                                      "int": "7"
                                    }
                                  ]
                                },
                                {
                                  "prim": "PAIR"
                                },
                                {
                                  "prim": "DIG",
                                  "args": [
                                    {
                                      "int": "6"
                                    }
                                  ]
                                },
                                {
                                  "prim": "PAIR"
                                },
                                {
                                  "prim": "DIG",
                                  "args": [
                                    {
                                      "int": "5"
                                    }
                                  ]
                                },
                                {
                                  "prim": "PAIR"
                                },
                                {
                                  "prim": "DIG",
                                  "args": [
                                    {
                                      "int": "4"
                                    }
                                  ]
                                },
                                {
                                  "prim": "PAIR"
                                },
                                {
                                  "prim": "DIG",
                                  "args": [
                                    {
                                      "int": "3"
                                    }
                                  ]
                                },
                                {
                                  "prim": "PAIR"
                                },
                                {
                                  "prim": "DIG",
                                  "args": [
                                    {
                                      "int": "2"
                                    }
                                  ]
                                },
                                {
                                  "prim": "PAIR"
                                },
                                {
                                  "prim": "SWAP"
                                },
                                {
                                  "prim": "PAIR"
                                },
                                {
                                  "prim": "SWAP"
                                }
                              ]
                            ]
                          }
                        ]
                      ]
                    }
                  ]
                ]
              }
            ]
          ]
        },
        {
          "prim": "PAIR"
        }
      ]
    ]
  }
]

================
File: src/assets/walletStorage.json
================
{
    "prim": "Pair",
    "args": [
      {
        "string": "tz1RuTC6e6FxWLTPPjAG3tesiBwwkK1bBkqR"
      },
      {
        "prim": "False"
      },
      {
        "int": "2580"
      },
      {
        "int": "2580"
      },
      [
        {
          "prim": "Elt",
          "args": [
            {
              "int": "0"
            },
            {
              "prim": "Pair",
              "args": [
                {
                  "string": "KT1SP3hazeQKE1Sk8MKaCED86GPGhyX2Jyu3"
                },
                {
                  "int": "123456"
                },
                {
                  "int": "1500"
                }
              ]
            }
          ]
        }
      ],
      {
        "prim": "Some",
        "args": [
          {
            "int": "2580"
          }
        ]
      },
      [
        {
          "prim": "Elt",
          "args": [
            {
              "string": "tz1QSURdw5fx5E24q2LGcPmiekyP38L3GpXf"
            },
            {
              "int": "1500"
            }
          ]
        },
        {
          "prim": "Elt",
          "args": [
            {
              "string": "KT1SJjCTroZ3NgZJSqZp48EXWknGntFWVSKC"
            },
            {
              "int": "1080"
            }
          ]
        }
      ],
      {
        "prim": "Some",
        "args": [
          {
            "int": "123456"
          }
        ]
      },
      []
    ]
  }

================
File: src/lib/stores/beaconStore.svelte.ts
================
import { DAppClient, type DAppClientOptions, NetworkType } from '@airgap/beacon-sdk';
import { TezosToolkit } from '@taquito/taquito';
import { BeaconWallet } from '@taquito/beacon-wallet';

interface BeaconState {
    address: string | null;
    wbalance: number | null;
    isConnected: boolean;
    network: NetworkType;
    error: string | null;
}

export const beaconState = $state<BeaconState>({
    address: null,
    wbalance: null,
    isConnected: false,
    network: NetworkType.GHOSTNET,
    error: null
});

const options: DAppClientOptions = {
    name: 'Tokensharebeacon',
    iconUrl: 'https://taquito.io/img/favicon.svg',
    network: { type: beaconState.network },
    enableMetrics: true,
};

// Create a single instance of DAppClient
export const beaconClient = new DAppClient(options);

// Create a single instance of TezosToolkit and BeaconWallet
export const Tezos = new TezosToolkit('https://ghostnet.smartpy.io');
export const wallet = new BeaconWallet({ name: "TokenShare Beacon" });

Tezos.setWalletProvider(wallet);

export async function connectWallet() {
    try {
        beaconState.error = null;
        console.log("Requesting permissions...");
        
        if (beaconState.isConnected) {
            return;
        }
        
        const permissions = await beaconClient.requestPermissions(options);

        // Set active account in wallet
        await wallet.requestPermissions({
            network: { type: NetworkType.GHOSTNET }
        });


        const balance = await Tezos.tz.getBalance(permissions.address);
        
        beaconState.wbalance = balance.toNumber() / 1000000;
        beaconState.address = permissions.address;
        beaconState.isConnected = true;

        console.log("Connected to wallet:", permissions.address);
    } catch (error) {
        console.error("Connection error:", error);
        beaconState.error = error instanceof Error ? error.message : "Failed to connect wallet";
        beaconState.isConnected = false;
    }
}

export async function disconnectWallet() {
    try {
        await beaconClient.disconnect();
        await wallet.clearActiveAccount();
        console.log("Wallet disconnected");
        beaconState.address = null;
        beaconState.isConnected = false;
        beaconState.error = null;
    } catch (error) {
        console.error("Disconnection error:", error);
        beaconState.error = error instanceof Error ? error.message : "Failed to disconnect wallet";
    }
}

export async function checkExistingConnection() {
    try {
        const activeAccount = await beaconClient.getActiveAccount();
        if (activeAccount) {
            beaconState.address = activeAccount.address;
            beaconState.isConnected = true;
            console.log("Found existing connection:", activeAccount.address);
            const balance = await Tezos.tz.getBalance(activeAccount.address);
            beaconState.wbalance = balance.toNumber() / 1000000;

            // Also set up the wallet provider
            await wallet.requestPermissions({
                network: { type: NetworkType.GHOSTNET }
            });
            
            return true;
        }
    } catch (error) {
        console.error("Error checking existing connection:", error);
        beaconState.error = error instanceof Error ? error.message : "Failed to check wallet connection";
    }
    return false;
}

================
File: src/lib/stores/contractStore.svelte.ts
================
import { writable } from 'svelte/store';
import { TezosToolkit } from '@taquito/taquito';


interface ContractState {
    contractAddress: string | null;
}

export const contractState = writable<ContractState>({
    contractAddress: null
});

export const contractInstance = writable<any>(null);

================
File: src/lib/stores/tzktStorage.svelte.ts
================
import { writable } from 'svelte/store';

export interface TzktTicket {
    data: string;
    amount: string;
    address: string;
}

export interface TzktStorageData {
    max_shares: string | null;
    owners_map: Record<string, string> | null;
    admin_address: string | null;
    issued_shares: string | null;
    share_balances: Record<string, TzktTicket> | null;
    registry_number: string | null;
    allocated_shares: string | null;
    all_shares_issued: boolean;
    issued_unclaimed_shares2: Record<string, TzktTicket> | null;
}

export const tzktStorageData = $state<TzktStorageData>({
    max_shares: null,
    owners_map: null,
    admin_address: null,
    issued_shares: null,
    share_balances: null,
    registry_number: null,
    allocated_shares: null,
    all_shares_issued: false,
    issued_unclaimed_shares2: null
});

================
File: src/lib/stores/wallet.ts
================
import { TezosToolkit } from '@taquito/taquito';
import { TempleWallet } from '@temple-wallet/dapp';


export interface WalletData {
    wallet: TempleWallet | null;
    Tezos: TezosToolkit | null;
    userAddress: string | null;
    wbalance: string | null;
    walletDataAvailable: boolean;
}


export const walletState = $state<WalletData>({
    wallet: null,
    Tezos: null,
    userAddress: null,
    wbalance: null,
    walletDataAvailable: false
});

================
File: src/lib/beaconWallet.ts
================
import { BeaconEvent, DAppClient, NetworkType } from "@airgap/beacon-sdk";

class BeaconWalletManager {
    private dAppClient: DAppClient;

    constructor() {
        this.dAppClient = new DAppClient({
            name: "TokenShareBeacon",
            preferredNetwork: NetworkType.GHOSTNET
        });

        // Set up default event listeners
        this.setupEventListeners();
    }

    private setupEventListeners() {
        this.dAppClient.subscribeToEvent(BeaconEvent.ACTIVE_ACCOUNT_SET, (account) => {
            console.log(`${BeaconEvent.ACTIVE_ACCOUNT_SET} triggered: `, account);
        });
    }

    async checkActiveAccount() {
        try {
            const activeAccount = await this.dAppClient.getActiveAccount();
            if (activeAccount) {
                console.log("Already connected:", activeAccount.address);
                return activeAccount;
            }
            return null;
        } catch (error) {
            console.error("Error checking active account:", error);
            return null;
        }
    }

    async requestPermissions() {
        try {
            const permissions = await this.dAppClient.requestPermissions({
                network: {
                    type: NetworkType.GHOSTNET,
                    rpcUrl: "https://ghostnet.smartpy.io"
                }
            });
            console.log("Got permissions:", permissions.address);
            return permissions;
        } catch (error) {
            console.error("Error requesting permissions:", error);
            throw error;
        }
    }

    async disconnect() {
        try {
            await this.dAppClient.disconnect();
            console.log("Disconnected");
        } catch (error) {
            console.error("Error disconnecting:", error);
            throw error;
        }
    }

    async clearActiveAccount() {
        try {
            await this.dAppClient.clearActiveAccount();
            const account = await this.dAppClient.getActiveAccount();
            console.log("Active Account after clear:", account);
            return account;
        } catch (error) {
            console.error("Error clearing active account:", error);
            throw error;
        }
    }
}

// Create and export a single instance
export const beaconWallet = new BeaconWalletManager();

================
File: src/lib/ContractAdmin.svelte
================
<script lang="ts">
    import { onMount } from "svelte";
   
    import { TezosToolkit } from '@taquito/taquito';
    import { TempleWallet } from '@temple-wallet/dapp';
    import { MichelsonMap } from '@taquito/taquito';

    import contractCode2Originate from '../assets/walletContract.json';

    interface TzktTicket {
        data: string;
        amount: string;
        address: string;
    }

    interface TzktStorageData {
        max_shares: string;
        owners_map: Record<string, string>;
        admin_address: string;
        issued_shares: string;
        share_balances: Record<string, TzktTicket>;
        registry_number: string;
        allocated_shares: string;
        all_shares_issued: boolean;
        issued_unclaimed_shares2: Record<string, TzktTicket>;
    }

    const tezSym: string ='ꜩ';

    // Props and state
    export let contractAddress: string = '';
    let userAddress: string;
    let wbalance: string;
    let walletDataAvailable: boolean = false;
    let contractInstance: any = null;
    let storageData: any = null;
    let tzktStorageData: TzktStorageData | null = null;

    let Tezos: TezosToolkit = new TezosToolkit('https://ghostnet.smartpy.io');
    

    let tzktOwnersMapEntries: [string, string][] = [];
    let tzktUnclaimedSharesEntries: [string, any][] = [];
    let tzktShareBalancesEntries: [string, any][] = [];

    let contractScript: any = null;
    let contractCode: any = null;
    let contractStorageStructure: any = null;


    onMount(async () => {
        try {
            
        } catch (err) {
            console.error(err);

        }
    });


    async function loadContract() {
        try {
            contractInstance = await Tezos.wallet.at(contractAddress);
            storageData = await contractInstance.storage();
            //console.log(storageData.issued_unclaimed_shares2);
            for (const [address, ticket] of storageData.share_balances.entries()) {
                console.log(`Address: ${address}, Shares owned: ${ticket.amount}`);
            }

            for (const [key, ticket] of storageData.issued_unclaimed_shares2.entries()) {
                console.log('Issued unclaimed shares')
                console.log(`Key: ${key},  Ticketer: ${ticket.ticketer}, Value: ${ticket.value}, Amount: ${ticket.amount}`)
            }

            contractCode = contractInstance.script.code;
            contractStorageStructure = contractInstance.script.storage;
            console.log('contractStorageStructure')
            console.log(contractStorageStructure)
        } catch (error) {
            console.error("Failed to load contract:", error);
        }
    }

    async function loadContractTzkt() {
        try {
            const response = await fetch(`https://api.ghostnet.tzkt.io/v1/contracts/${contractAddress}/storage`);
            tzktStorageData = await response.json();
            
            // Process owners map
            tzktOwnersMapEntries = Object.entries(tzktStorageData?.owners_map ?? {});

            // Process unclaimed shares
            tzktUnclaimedSharesEntries = Object.entries(tzktStorageData?.issued_unclaimed_shares2 ?? {});

            // Process share balances
            tzktShareBalancesEntries = Object.entries(tzktStorageData?.share_balances ?? {});

            console.log('TzKT Storage Data:', tzktStorageData);
            console.log('Processed Entries:', {
                owners: tzktOwnersMapEntries,
                unclaimed: tzktUnclaimedSharesEntries,
                balances: tzktShareBalancesEntries
            });
        } catch (error) {
            console.error("Failed to load contract from TzKT API:", error);
        }
    }

    function extractStorageDataIntoVariables() {
        storageData
    }

</script>

<div class="container mx-auto p-4">

    <!-- Contract Loading -->
    <div class="mb-8">
        <div class="flex gap-4">
            <input 
                class="flex-1 p-2 border rounded" 
                bind:value={contractAddress} 
                placeholder="Enter contract address" 
            />
            <button 
                class="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600"
                on:click={loadContract}
            >
                Load Contract (Taquito)
            </button>
            <button 
                class="px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600"
                on:click={loadContractTzkt}
            >
                Load Contract (TzKT)
            </button>
        </div>
    </div>
    <div class="grid grid-cols-2 gap-4">
        <!-- Taquito Contract Storage Display -->
        <div>
            {#if contractInstance && storageData}
            <div class="mb-8 p-4 bg-gray-100 rounded-lg">
                <h2 class="text-2xl font-bold mb-4">Contract Storage (Taquito)</h2>
                <div class="grid grid-cols-2 gap-4">
                    <div>
                        <span class="font-semibold">Registry Number:</span> 
                        <span>{storageData.registry_number?.Some || 'Not set'}</span>
                    </div>
                    <div>
                        <span class="font-semibold">Max Shares:</span> 
                        <span>{storageData.max_shares?.Some || 'Not set'}</span>
                    </div>
                    <div>
                        <span class="font-semibold">Issued Shares:</span> 
                        <span>{storageData.issued_shares}</span>
                    </div>
                    <div>
                        <span class="font-semibold">Allocated Shares:</span> 
                        <span>{storageData.allocated_shares}</span>
                    </div>
                    <div>
                        <span class="font-semibold">All Shares Issued:</span> 
                        <span>{storageData.all_shares_issued ? 'Yes' : 'No'}</span>
                    </div>
                    <div>
                        <span class="font-semibold">Contract admin:</span> 
                        <span>{storageData.admin_address}</span>
                    </div>
                </div>

                <!-- Share Owners (Entitled to Claim) -->
                <div class="mt-4">
                    <h3 class="text-xl font-semibold mb-2">Share Owners (Entitled to Claim)</h3>
                    <table class="w-full border-collapse">
                        <thead>
                            <tr>
                                <th class="text-left p-2 bg-gray-200">Address</th>
                                <th class="text-right p-2 bg-gray-200">Entitled Shares</th>
                            </tr>
                        </thead>
                        <tbody>
                            {#if storageData?.owners_map && storageData.owners_map.size > 0}
                                {#each storageData.owners_map.entries() as [address, shares]}
                                    <tr class="border-t">
                                        <td class="font-mono p-2">{address}</td>
                                        <td class="text-right p-2">{shares}</td>
                                    </tr>
                                {/each}
                            {:else}
                                <tr class="border-t">
                                    <td class="text-center p-2 text-gray-500" colspan="2">No share owners registered</td>
                                </tr>
                            {/if}
                        </tbody>
                    </table>
                </div>

                <!-- Issued Unclaimed Shares -->
                <div class="mt-4">
                    <h3 class="text-xl font-semibold mb-2">Issued Unclaimed Shares</h3>
                    {#if storageData?.issued_unclaimed_shares2}
                    <table class="w-full border-collapse">
                        <thead>
                            <tr>
                                <th class="text-left p-2 bg-gray-200">Registry Number</th>
                                <th class="text-center p-2 bg-gray-200">Issuer</th>
                                <th class="text-right p-2 bg-gray-200">Amount</th>
                            </tr>
                        </thead>
                        <tbody>
                            {#if storageData?.issued_unclaimed_shares2 && storageData.issued_unclaimed_shares2.size > 0}
                                {#each Array.from((storageData!.issued_unclaimed_shares2 as MichelsonMap<any, any>).entries()) as [_, ticket]}
                                <tr class="border-t">
                                    <td class="font-mono p-2">{ticket.value}</td>
                                    <td class="text-center p-2">{ticket.ticketer}</td>
                                    <td class="text-right p-2">{ticket.amount}</td>
                                </tr>    
                                {/each}
                            {:else}
                            <tr class="border-t">
                                <td class="text-center p-2 text-gray-500" colspan="3">No unclaimed shares</td>
                            </tr>
                            {/if}
                        </tbody>
                    </table>
                    {/if}
                </div>

                <!-- Share Balances (Owned Company Shares) -->
                <div class="mt-4">
                    <h3 class="text-xl font-semibold mb-2">Owned Company Shares</h3>
                    <table class="w-full border-collapse">
                        <thead>
                            <tr>
                                <th class="text-left p-2 bg-gray-200">Address</th>
                                <th class="text-right p-2 bg-gray-200">Shares owned</th>
                            </tr>
                        </thead>
                        <tbody>
                            {#if storageData?.share_balances && storageData.share_balances.size > 0}
                                {#each storageData.share_balances.entries() as [address, shares]}
                                    <tr class="border-t">
                                        <td class="font-mono p-2">{address}</td>
                                        <td class="text-right p-2">{shares.amount}</td>
                                    </tr>
                                {/each}
                            {:else}
                                <tr class="border-t">
                                    <td class="text-center p-2 text-gray-500" colspan="2">No shares owned</td>
                                </tr>
                            {/if}
                        </tbody>
                    </table>
                </div>
            </div>
            {/if}
        </div>

        <!-- TzKT Contract Storage Display -->
        <div>
            {#if tzktStorageData}
            <div class="mb-8 p-4 bg-gray-100 rounded-lg">
                <h2 class="text-2xl font-bold mb-4">Contract Storage (TzKT API)</h2>
                <div class="grid grid-cols-2 gap-4">
                    <div>
                        <span class="font-semibold">Registry Number:</span> 
                        <span>{tzktStorageData.registry_number || 'Not set'}</span>
                    </div>
                    <div>
                        <span class="font-semibold">Max Shares:</span> 
                        <span>{tzktStorageData.max_shares || 'Not set'}</span>
                    </div>
                    <div>
                        <span class="font-semibold">Issued Shares:</span> 
                        <span>{tzktStorageData.issued_shares}</span>
                    </div>
                    <div>
                        <span class="font-semibold">Allocated Shares:</span> 
                        <span>{tzktStorageData.allocated_shares}</span>
                    </div>
                    <div>
                        <span class="font-semibold">All Shares Issued:</span> 
                        <span>{tzktStorageData.all_shares_issued ? 'Yes' : 'No'}</span>
                    </div>
                    <div>
                        <span class="font-semibold">Contract admin:</span> 
                        <span>{tzktStorageData.admin_address}</span>
                    </div>
                </div>

                <!-- Share Owners (Entitled to Claim) -->
                <div class="mt-4">
                    <h3 class="text-xl font-semibold mb-2">Share Owners (Entitled to Claim)</h3>
                    <table class="w-full border-collapse">
                        <thead>
                            <tr>
                                <th class="text-left p-2 bg-gray-200">Address</th>
                                <th class="text-right p-2 bg-gray-200">Entitled Shares</th>
                            </tr>
                        </thead>
                        <tbody>
                            {#if tzktOwnersMapEntries.length > 0}
                                {#each tzktOwnersMapEntries as [address, shares]}
                                    <tr class="border-t">
                                        <td class="font-mono p-2">{address}</td>
                                        <td class="text-right p-2">{shares}</td>
                                    </tr>
                                {/each}
                            {:else}
                                <tr class="border-t">
                                    <td class="text-center p-2 text-gray-500" colspan="2">No share owners registered</td>
                                </tr>
                            {/if}
                        </tbody>
                    </table>
                </div>

                <!-- Issued Unclaimed Shares -->
                <div class="mt-4">
                    <h3 class="text-xl font-semibold mb-2">Issued Unclaimed Shares</h3>
                    <table class="w-full border-collapse">
                        <thead>
                            <tr>
                                <th class="text-left p-2 bg-gray-200">Registry Number</th>
                                <th class="text-center p-2 bg-gray-200">Issuer</th>
                                <th class="text-right p-2 bg-gray-200">Amount</th>
                            </tr>
                        </thead>
                        <tbody>
                            {#if tzktUnclaimedSharesEntries.length > 0}
                                {#each tzktUnclaimedSharesEntries as [_, ticket]}
                                    <tr class="border-t">
                                        <td class="font-mono p-2">{ticket.data}</td>
                                        <td class="text-center p-2">{ticket.address}</td>
                                        <td class="text-right p-2">{ticket.amount}</td>
                                    </tr>
                                {/each}
                            {:else}
                                <tr class="border-t">
                                    <td class="text-center p-2 text-gray-500" colspan="3">No unclaimed shares</td>
                                </tr>
                            {/if}
                        </tbody>
                    </table>
                </div>

                <!-- Share Balances (Owned Company Shares) -->
                <div class="mt-4">
                    <h3 class="text-xl font-semibold mb-2">Owned Company Shares</h3>
                    <table class="w-full border-collapse">
                        <thead>
                            <tr>
                                <th class="text-left p-2 bg-gray-200">Address</th>
                                <th class="text-right p-2 bg-gray-200">Shares owned</th>
                            </tr>
                        </thead>
                        <tbody>
                            {#if tzktShareBalancesEntries.length > 0}
                                {#each tzktShareBalancesEntries as [_, shares]}
                                    <tr class="border-t">
                                        <td class="font-mono p-2">{shares.address}</td>
                                        <td class="text-right p-2">{shares.amount}</td>
                                    </tr>
                                {/each}
                            {:else}
                                <tr class="border-t">
                                    <td class="text-center p-2 text-gray-500" colspan="2">No shares owned</td>
                                </tr>
                            {/if}
                        </tbody>
                    </table>
                </div>
            </div>
            {/if}
        </div>
    </div>
</div>

================
File: src/lib/ContractLoader.svelte
================
<script lang="ts">
    import { onMount } from "svelte";
    import { contractState } from './stores/contractStore.svelte';
    import { tzktStorageData } from './stores/tzktStorage.svelte';
    import { TezosToolkit } from '@taquito/taquito';
    import { writable } from 'svelte/store';
    import ContractOps from "./ContractOps.svelte";
    
    interface TzktTicket {
        data: string;
        amount: string;
        address: string;
    }


/**
 * 

 interface TzktStorageData {
     max_shares: string | null;
     owners_map: Record<string, string> | null;
     admin_address: string | null;
     issued_shares: string | null;
     share_balances: Record<string, TzktTicket> | null;
     registry_number: string | null;
     allocated_shares: string | null;
     all_shares_issued: boolean;
     issued_unclaimed_shares2: Record<string, TzktTicket> | null;
 }



 export const tzktStorageData = $state<TzktStorageData>({
     max_shares: null,
     owners_map: null,
     admin_address: null,
     issued_shares: null,
     share_balances: null,
     registry_number: null,
     allocated_shares: null,
     all_shares_issued: false,
     issued_unclaimed_shares2: null
 });
 */


   

    

    let tzktOwnersMapEntries = $state<[string, string][]>([]);
    let tzktUnclaimedSharesEntries = $state<[string, TzktTicket][]>([]);
    let tzktShareBalancesEntries = $state<[string, TzktTicket][]>([]);

    /**
     * Test contracts
     * KT1SP3hazeQKE1Sk8MKaCED86GPGhyX2Jyu3
     * KT1SJjCTroZ3NgZJSqZp48EXWknGntFWVSKC
    */

    onMount(async () => {
        try {
            
        } catch (err) {
            console.error(err);

        }
    });


    async function loadContractTzkt() {
        try {
            const response = await fetch(`https://api.ghostnet.tzkt.io/v1/contracts/${$contractState.contractAddress}/storage`);
            const data = await response.json();
            
            // Update all properties
            Object.assign(tzktStorageData, data);
            
            // Update individual properties
            /*
            *tzktStorageData.max_shares = data.max_shares;
            tzktStorageData.owners_map = data.owners_map;
            tzktStorageData.admin_address = data.admin_address;
            tzktStorageData.issued_shares = data.issued_shares;
            tzktStorageData.share_balances = data.share_balances;
            tzktStorageData.registry_number = data.registry_number;
            tzktStorageData.allocated_shares = data.allocated_shares;
            tzktStorageData.all_shares_issued = data.all_shares_issued;
            tzktStorageData.issued_unclaimed_shares2 = data.issued_unclaimed_shares2;
            */
            

            // Process owners map
            tzktOwnersMapEntries = Object.entries(tzktStorageData.owners_map ?? {});

            // Process unclaimed shares
            tzktUnclaimedSharesEntries = Object.entries(tzktStorageData.issued_unclaimed_shares2 ?? {});

            // Process share balances
            tzktShareBalancesEntries = Object.entries(tzktStorageData.share_balances ?? {});

            // Log just the data we care about
            console.log('TzKT Storage Data:', {
                max_shares: tzktStorageData.max_shares,
                admin_address: tzktStorageData.admin_address,
                issued_shares: tzktStorageData.issued_shares,
                owners_map: tzktOwnersMapEntries,
                unclaimed: tzktUnclaimedSharesEntries,
                balances: tzktShareBalancesEntries
            });
        } catch (error) {
            console.error("Failed to load contract from TzKT API:", error);
        }
    }



</script>

<div class="container mx-auto p-4">
    <!-- Contract Loading -->
    <div class="mb-8">
        <div class="flex gap-4">
            <input 
                class="flex-1 p-2 border rounded" 
                bind:value={$contractState.contractAddress} 
                placeholder="Enter contract address" 
            />
            <button 
                class="px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600"
                onclick={loadContractTzkt}
            >
                Load Contract (TzKT 2)
            </button>
        </div>
    </div>

    <!-- TzKT Contract Storage Display -->
    {#if tzktStorageData.admin_address !== null}
        <div class="mb-8 p-4 bg-gray-100 rounded-lg">
            <h2 class="text-2xl font-bold mb-4">Contract Storage (TzKT API)</h2>
            <div class="grid grid-cols-2 gap-4">
                <div>
                    <span class="font-semibold">Registry Number:</span> 
                    <span>{tzktStorageData.registry_number || 'Not set'}</span>
                </div>
                <div>
                    <span class="font-semibold">Max Shares:</span> 
                    <span>{tzktStorageData.max_shares || 'Not set'}</span>
                </div>
                <div>
                    <span class="font-semibold">Issued Shares:</span> 
                    <span>{tzktStorageData.issued_shares}</span>
                </div>
                <div>
                    <span class="font-semibold">Allocated Shares:</span> 
                    <span>{tzktStorageData.allocated_shares}</span>
                </div>
                <div>
                    <span class="font-semibold">All Shares Issued:</span> 
                    <span>{tzktStorageData.all_shares_issued ? 'Yes' : 'No'}</span>
                </div>
                <div>
                    <span class="font-semibold">Contract admin:</span> 
                    <span>{tzktStorageData.admin_address}</span>
                </div>
            </div>

            <!-- Share Owners (Entitled to Claim) -->
            <div class="mt-4">
                <h3 class="text-xl font-semibold mb-2">Share Owners (Entitled to Claim)</h3>
                <table class="w-full border-collapse">
                    <thead>
                        <tr>
                            <th class="text-left p-2 bg-gray-200">Address</th>
                            <th class="text-right p-2 bg-gray-200">Entitled Shares</th>
                        </tr>
                    </thead>
                    <tbody>
                        {#if tzktOwnersMapEntries.length > 0}
                            {#each tzktOwnersMapEntries as [address, shares]}
                                <tr class="border-t">
                                    <td class="font-mono p-2">
                                        {#if address.startsWith('KT1')}
                                            <button 
                                                class="text-blue-600 hover:text-blue-800 hover:underline text-left"
                                                onclick={() => {
                                                    $contractState.contractAddress = address;
                                                    loadContractTzkt();
                                                }}
                                            >
                                                {address}
                                            </button>
                                        {:else}
                                            {address}
                                        {/if}
                                    </td>
                                    <td class="text-right p-2">{shares}</td>
                                </tr>
                            {/each}
                        {:else}
                            <tr class="border-t">
                                <td class="text-center p-2 text-gray-500" colspan="2">No share owners registered</td>
                            </tr>
                        {/if}
                    </tbody>
                </table>
            </div>

            <!-- Issued Unclaimed Shares -->
            <div class="mt-4">
                <h3 class="text-xl font-semibold mb-2">Issued Unclaimed Shares</h3>
                <table class="w-full border-collapse">
                    <thead>
                        <tr>
                            <th class="text-left p-2 bg-gray-200">Registry Number</th>
                            <th class="text-center p-2 bg-gray-200">Issuer</th>
                            <th class="text-right p-2 bg-gray-200">Amount</th>
                        </tr>
                    </thead>
                    <tbody>
                        {#if tzktUnclaimedSharesEntries.length > 0}
                            {#each tzktUnclaimedSharesEntries as [_, ticket]}
                                <tr class="border-t">
                                    <td class="font-mono p-2">{ticket.data}</td>
                                    <td class="text-center p-2">{ticket.address}</td>
                                    <td class="text-right p-2">{ticket.amount}</td>
                                </tr>
                            {/each}
                        {:else}
                            <tr class="border-t">
                                <td class="text-center p-2 text-gray-500" colspan="3">No unclaimed shares</td>
                            </tr>
                        {/if}
                    </tbody>
                </table>
            </div>

            <!-- Share Balances (Owned Company Shares) -->
            <div class="mt-4">
                <h3 class="text-xl font-semibold mb-2">Owned Company Shares</h3>
                <table class="w-full border-collapse">
                    <thead>
                        <tr>
                            <th class="text-left p-2 bg-gray-200">Address</th>
                            <th class="text-right p-2 bg-gray-200">Shares owned</th>
                        </tr>
                    </thead>
                    <tbody>
                        {#if tzktShareBalancesEntries.length > 0}
                            {#each tzktShareBalancesEntries as [_, shares]}
                                <tr class="border-t">
                                    <td class="font-mono p-2">
                                        <button 
                                            class="text-blue-600 hover:text-blue-800 hover:underline text-left"
                                            onclick={() => {
                                                $contractState.contractAddress = shares.address;
                                                loadContractTzkt();
                                            }}
                                        >
                                            {shares.address}
                                        </button>
                                    </td>
                                    <td class="text-right p-2">{shares.amount}</td>
                                </tr>
                            {/each}
                        {:else}
                            <tr class="border-t">
                                <td class="text-center p-2 text-gray-500" colspan="2">No shares owned</td>
                            </tr>
                        {/if}
                    </tbody>
                </table>
            </div>
        </div>
    {/if}

    {#if $contractState.contractAddress !== null}
        <div>
            <h2 class="text-2xl font-bold mb-4">Contract Operations</h2>
            <ContractOps />
        </div>
    {/if}
</div>

================
File: src/lib/ContractOps.svelte
================
<script lang="ts">
    import { onMount } from "svelte";
    import { contractState, contractInstance } from './stores/contractStore.svelte';
    import { tzktStorageData } from './stores/tzktStorage.svelte';
    import { beaconState, Tezos } from './stores/beaconStore.svelte';
    import { writable } from "svelte/store";



    const isAdmin = $derived(
        beaconState.address !== null && 
        tzktStorageData.admin_address !== null && 
        beaconState.address === tzktStorageData.admin_address
    );
 
    

    // Form states
    let adminForms = $state({
        addShareOwner: { amount: '', ownerAddress: '' },
        changeMaxShares: { newMax: '' },
        issueShares: { amount: '' }
    });
    
    let userForms = $state({
        transferShares: { amount: '', destination: '', share: '' },
        claimShares: { address: '' }
    });

    async function connectContract() {
        try {
            if (!$contractState.contractAddress) {
                throw new Error("Contract address not set");
            }
            if (!beaconState.isConnected) {
                throw new Error("Wallet not connected");
            }
            
            contractInstance.set(await Tezos.wallet.at($contractState.contractAddress));
            console.log("Contract connected successfully");
        } catch (error) {
            console.error("Failed to load contract:", error);
            throw error;
        }
    }



    // Admin Functions
    async function handleAddShareOwner(event: Event) {
        event.preventDefault();
        try {
            const operation = await $contractInstance.methods.add_share_owner(
                adminForms.addShareOwner.amount,
                adminForms.addShareOwner.ownerAddress
            ).send();
            await operation.confirmation();
        } catch (error) {
            console.error("Failed to add share owner:", error);
        }
    }

    async function handleChangeMaxShares(event: Event) {
        event.preventDefault();
        try {
            const operation = await $contractInstance.methods.change_max_shares(
                adminForms.changeMaxShares.newMax
            ).send();
            await operation.confirmation();
            console.log("Max shares updated successfully");
            adminForms.changeMaxShares.newMax = '';
        } catch (error) {
            console.error("Failed to change max shares:", error);
            throw error;
        }
    }

    async function handleIssueShares(event: Event) {
        event.preventDefault();
        try {
            const operation = await $contractInstance.methods.issue_shares_unclaimed2(
                adminForms.issueShares.amount
            ).send();
            await operation.confirmation();
            console.log("Shares issued successfully");
            adminForms.issueShares.amount = '';
        } catch (error) {
            console.error("Failed to issue shares:", error);
            throw error;
        }
    }

    // User Functions
    async function handleTransferShares(event: Event) {
        event.preventDefault();
        try {
            const operation = await $contractInstance.methods.transfer_shares(
                userForms.transferShares.amount,
                userForms.transferShares.destination,
                userForms.transferShares.share
            ).send();
            await operation.confirmation();
            console.log("Shares transferred successfully");
            userForms.transferShares = { amount: '', destination: '', share: '' };
        } catch (error) {
            console.error("Failed to transfer shares:", error);
            throw error;
        }
    }

    async function handleClaimShares(event: Event) {
        event.preventDefault();
        try {
            const operation = await $contractInstance.methods.claim_shares(
                userForms.claimShares.address
            ).send();
            await operation.confirmation();
            console.log("Shares claimed successfully");
            userForms.claimShares.address = '';
        } catch (error) {
            console.error("Failed to claim shares:", error);
            throw error;
        }
    }




    // Debug effect to help track state changes
    $effect(() => {
        console.log('State Debug:', {
            beaconAddress: beaconState.address,
            adminAddress: tzktStorageData.admin_address,
            isAdmin
        });
    });
</script>

<div>
    {#if $contractInstance}
        <div class="p-4 space-y-6">
            {#if isAdmin}
                <div class="bg-blue-50 p-4 rounded-lg">
                    <h2 class="text-2xl font-bold mb-4">Admin Functions</h2>
                    
                    <!-- Add Share Owner Form -->
                    <form class="mb-4 space-y-4" onsubmit={handleAddShareOwner}>
                        <h3 class="text-xl font-semibold">Add Share Owner</h3>
                        <div class="grid grid-cols-2 gap-4">
                            <input 
                                type="number" 
                                bind:value={adminForms.addShareOwner.amount}
                                placeholder="Amount"
                                class="p-2 border rounded"
                            />
                            <input 
                                type="text" 
                                bind:value={adminForms.addShareOwner.ownerAddress}
                                placeholder="Owner Address"
                                class="p-2 border rounded"
                            />
                        </div>
                        <button 
                            type="submit"
                            class="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600"
                        >
                            Add Owner
                        </button>
                    </form>

                    <!-- Change Max Shares Form -->
                    <form class="mb-4 space-y-4" onsubmit={handleChangeMaxShares}>
                        <h3 class="text-xl font-semibold">Change Max Shares</h3>
                        <input 
                            type="number" 
                            bind:value={adminForms.changeMaxShares.newMax}
                            placeholder="New Maximum Shares"
                            class="p-2 border rounded"
                        />
                        <button 
                            type="submit"
                            class="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600"
                        >
                            Update Max Shares
                        </button>
                    </form>

                    <!-- Issue Shares Form -->
                    <form class="space-y-4" onsubmit={handleIssueShares}>
                        <h3 class="text-xl font-semibold">Issue Shares</h3>
                        <input 
                            type="number" 
                            bind:value={adminForms.issueShares.amount}
                            placeholder="Amount to Issue"
                            class="p-2 border rounded"
                        />
                        <button 
                            type="submit"
                            class="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600"
                        >
                            Issue Shares
                        </button>
                    </form>
                </div>
            {/if}

            <div class="bg-green-50 p-4 rounded-lg">
                <h2 class="text-2xl font-bold mb-4">User Functions</h2>
                
                <!-- Transfer Shares Form -->
                <form class="mb-4 space-y-4" onsubmit={handleTransferShares}>
                    <h3 class="text-xl font-semibold">Transfer Shares</h3>
                    <div class="grid grid-cols-3 gap-4">
                        <input 
                            type="number" 
                            bind:value={userForms.transferShares.amount}
                            placeholder="Amount"
                            class="p-2 border rounded"
                        />
                        <input 
                            type="text" 
                            bind:value={userForms.transferShares.destination}
                            placeholder="Destination Address"
                            class="p-2 border rounded"
                        />
                        <input 
                            type="text" 
                            bind:value={userForms.transferShares.share}
                            placeholder="Share Address"
                            class="p-2 border rounded"
                        />
                    </div>
                    <button 
                        type="submit"
                        class="mt-2 px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600"
                    >
                        Transfer Shares
                    </button>
                </form>

                <!-- Claim Shares Form -->
                <form class="space-y-4" onsubmit={handleClaimShares}>
                    <h3 class="text-xl font-semibold">Claim Shares</h3>
                    <input 
                        type="text" 
                        bind:value={userForms.claimShares.address}
                        placeholder="Address"
                        class="p-2 border rounded"
                    />
                    <button 
                        type="submit"
                        class="mt-2 px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600"
                    >
                        Claim Shares
                    </button>
                </form>
            </div>
        </div>
    {:else if beaconState.isConnected}
        <div class="p-4">
            <button 
                class="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600"
                onclick={connectContract}
            >
                Connect to Contract
            </button>
        </div>
    {:else}
        <div class="p-4 text-gray-600">
            Please connect your wallet first to interact with the contract.
        </div>
    {/if}
</div>

================
File: src/lib/Counter.svelte
================
<script lang="ts">
  let count: number = $state(0)
  const increment = () => {
    count += 1
  }
</script>

<button onclick={increment}>
  count is {count}
</button>

================
File: src/lib/Taq.svelte
================
<script lang="ts">
    import { onMount } from "svelte";
   
    import { TezosToolkit } from '@taquito/taquito';
    import { TempleWallet } from '@temple-wallet/dapp';

    let Tezos: TezosToolkit = new TezosToolkit('https://ghostnet.smartpy.io');



        // Props and state
    export let contractAddress: string = '';
    let userAddress: string;
    let wbalance: string;
    let walletDataAvailable: boolean = false;
    let contractInstance: any = null;
    let storageData: any = null;


    let ownersMapEntries: [string, number][] = [];
    let unclaimedSharesEntries: [string, any][] = [];
    let shareBalancesEntries: [string, any][] = [];
    
    /**
     
    const testWallets: Wallets = {
        'Kaspar': {'address': 'tz1QSUqRdw5fx5E24q2LGcPmiekyP38L3GpXf', 'balance': 0},
        'kspr': {'address': 'tz1RuTC6e6FxWLTPPjAG3tesiBwwkK1bBkqR', 'balance': 0}
    }
    tz1QSURdw5fx5E24q2LGcPmiekyP38L3GpXf
    tz1QSURdw5fx5E24q2LGcPmiekyP38L3GpXf
    tz1QSURdw5fx5E24q2LGcPmiekyP38L3GpXf
    tz1QSURdw5fx5E24q2LGcPmiekyP38L3GpXf
    */
    
   
    /** Testing working with ticket and imp addresses */
    /**
     * 
     const wallet_kspr: string = "tz1RuTC6e6FxWLTPPjAG3tesiBwwkK1bBkqR"
     
     let ticketToken = {
        ticketer: 'TICKETER_ADDRESS', // Contract address that issued the ticket
        value: {
            // Ticket value details (e.g., content), match the ticket schema
            content_type: { prim: 'string' },
            content: { string: 'Ticket' }
        },
        amount: 1 // Number of tickets to send
    };
    
    */
 
    /*
        let walletDataAvailable: boolean = false;
        let userAddress: string;
        let wbalance: string;

        let contractAddress: string = '';
        let contractInstance: any = null;
        let storageData: any = null;Contract data
    */


    // Form states
    let adminForms = {
        addShareOwner: { amount: '', ownerAddress: '' },
        changeMaxShares: { newMax: '' },
        issueShares: { amount: '' }
    };
    
    let userForms = {
        transferShares: { amount: '', destination: '', share: '' },
        claimShares: { address: '' }
    };

    onMount(async () => {
       
        try {
            
        } catch (err) {
            console.error(err);
            
        }
    });

    async function getWalletBalance(address: string): Promise<number> {
        try {
            const balance = await Tezos.tz.getBalance(address);
            return balance.toNumber() / 1000000;
        } catch (error) {
            console.error("Failed to fetch balance:", error);
            return 0;
        }
    }

    async function loadContract() {
        try {
            contractInstance = await Tezos.wallet.at(contractAddress);
            storageData = await contractInstance.storage();
            
            // Process owners map
            ownersMapEntries = [];
            storageData.owners_map.forEach((value: number, key: string) => {
                ownersMapEntries.push([key, value]);
            });

            // Process unclaimed shares
            unclaimedSharesEntries = [];
            storageData.issued_unclaimed_shares2.forEach((value: any, key: string) => {
                unclaimedSharesEntries.push([key, value]);
            });

            // Process share balances
            shareBalancesEntries = [];
            storageData.share_balances.forEach((value: any, key: string) => {
                shareBalancesEntries.push([key, value]);
            });

        } catch (error) {
            console.error("Failed to load contract:", error);
        }
    }

    // Admin Functions
    async function addShareOwner() {
        try {
            const operation = await contractInstance.methods.add_share_owner(
                adminForms.addShareOwner.amount,
                adminForms.addShareOwner.ownerAddress
            ).send();
            await operation.confirmation();
            await loadContract(); // Refresh data
        } catch (error) {
            console.error("Failed to add share owner:", error);
        }
    }

    async function changeMaxShares() {
        try {
            const operation = await contractInstance.methods.change_max_shares(
                adminForms.changeMaxShares.newMax
            ).send();
            await operation.confirmation();
            await loadContract();
        } catch (error) {
            console.error("Failed to change max shares:", error);
        }
    }

    async function issueShares() {
        try {
            const operation = await contractInstance.methods.issue_shares_unclaimed2(
                adminForms.issueShares.amount
            ).send();
            await operation.confirmation();
            await loadContract();
        } catch (error) {
            console.error("Failed to issue shares:", error);
        }
    }

    // User Functions
    async function transferShares() {
        try {
            const operation = await contractInstance.methods.transfer_shares(
                userForms.transferShares.amount,
                userForms.transferShares.destination,
                userForms.transferShares.share
            ).send();
            await operation.confirmation();
            await loadContract();
        } catch (error) {
            console.error("Failed to transfer shares:", error);
        }
    }

    async function claimShares() {
        try {
            const operation = await contractInstance.methods.claim_shares(
                userForms.claimShares.address
            ).send();
            await operation.confirmation();
            await loadContract();
        } catch (error) {
            console.error("Failed to claim shares:", error);
        }
    }

    //$: isAdmin = storageData?.admin_address === userAddress;
</script>

<div class="container mx-auto p-4">

    <!-- Contract Loading -->
    <div class="mb-8">
        <div class="flex gap-4">
            <input 
                class="flex-1 p-2 border rounded" 
                bind:value={contractAddress} 
                placeholder="Enter contract address" 
            />
            <button 
                class="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600"
                on:click={loadContract}
            >
                Load Contract
            </button>
        </div>
    </div>

    {#if contractInstance && storageData}
        <!-- Contract Storage Display -->
        <div class="mb-8 p-4 bg-gray-100 rounded-lg">
            <h2 class="text-2xl font-bold mb-4">Contract Storage</h2>
            <div class="grid grid-cols-2 gap-4">
                <div>
                    <span class="font-semibold">Registry Number:</span> 
                    <span>{storageData.registry_number?.Some || 'Not set'}</span>
                </div>
                <div>
                    <span class="font-semibold">Max Shares:</span> 
                    <span>{storageData.max_shares?.Some || 'Not set'}</span>
                </div>
                <div>
                    <span class="font-semibold">Issued Shares:</span> 
                    <span>{storageData.issued_shares}</span>
                </div>
                <div>
                    <span class="font-semibold">Allocated Shares:</span> 
                    <span>{storageData.allocated_shares}</span>
                </div>
                <div>
                    <span class="font-semibold">All Shares Issued:</span> 
                    <span>{storageData.all_shares_issued ? 'Yes' : 'No'}</span>
                </div>
            </div>

            <!-- Share Owners (Entitled to Claim) -->
            <div class="mt-4">
                <h3 class="text-xl font-semibold mb-2">Share Owners (Entitled to Claim)</h3>
                <table class="w-full border-collapse">
                    <thead>
                        <tr>
                            <th class="text-left p-2 bg-gray-200">Address</th>
                            <th class="text-right p-2 bg-gray-200">Entitled Shares</th>
                        </tr>
                    </thead>
                    <tbody>
                        {#if ownersMapEntries.length > 0}
                            {#each ownersMapEntries as [address, shares]}
                                <tr class="border-t">
                                    <td class="font-mono p-2">{address}</td>
                                    <td class="text-right p-2">{shares}</td>
                                </tr>
                            {/each}
                        {:else}
                            <tr>
                                <td colspan="2" class="text-center p-2">No share owners found</td>
                            </tr>
                        {/if}
                    </tbody>
                </table>
            </div>

            <!-- Issued Unclaimed Shares -->
            <div class="mt-4">
                <h3 class="text-xl font-semibold mb-2">Issued Unclaimed Shares</h3>
                <table class="w-full border-collapse">
                    <thead>
                        <tr>
                            <th class="text-left p-2 bg-gray-200">Company Address</th>
                            <th class="text-right p-2 bg-gray-200">Registry Number</th>
                            <th class="text-right p-2 bg-gray-200">Amount</th>
                        </tr>
                    </thead>
                    <tbody>
                        {#if unclaimedSharesEntries.length > 0}
                            {#each unclaimedSharesEntries as [id, ticket]}
                                <tr class="border-t">
                                    <td class="font-mono p-2">{ticket.ticketer}</td>
                                    <td class="text-right p-2">{ticket.value}</td>
                                    <td class="text-right p-2">{ticket.amount}</td>
                                </tr>
                            {/each}
                        {:else}
                            <tr>
                                <td colspan="3" class="text-center p-2">No unclaimed shares found</td>
                            </tr>
                        {/if}
                    </tbody>
                </table>
            </div>

            <!-- Share Balances (Owned Tickets) -->
            <div class="mt-4">
                <h3 class="text-xl font-semibold mb-2">Share Balances (Owned Company Shares)</h3>
                <table class="w-full border-collapse">
                    <thead>
                        <tr>
                            <th class="text-left p-2 bg-gray-200">Company Address</th>
                            <th class="text-right p-2 bg-gray-200">Registry Number</th>
                            <th class="text-right p-2 bg-gray-200">Amount</th>
                        </tr>
                    </thead>
                    <tbody>
                        {#if shareBalancesEntries.length > 0}
                            {#each shareBalancesEntries as [address, ticket]}
                                <tr class="border-t">
                                    <td class="font-mono p-2">{ticket.ticketer}</td>
                                    <td class="text-right p-2">{ticket.value}</td>
                                    <td class="text-right p-2">{ticket.amount}</td>
                                </tr>
                            {/each}
                        {:else}
                            <tr>
                                <td colspan="3" class="text-center p-2">No share balances found</td>
                            </tr>
                        {/if}
                    </tbody>
                </table>
            </div>
        </div>
        <!-- Admin Functions -->
        {#if storageData?.admin_address }
            <div class="mb-8 p-4 bg-blue-50 rounded-lg">
                <h2 class="text-2xl font-bold mb-4">Admin Functions</h2>
                
                <!-- Add Share Owner Form -->
                <form on:submit|preventDefault={addShareOwner} class="mb-4">
                    <h3 class="text-xl font-semibold mb-2">Add Share Owner</h3>
                    <div class="grid grid-cols-2 gap-4">
                        <input 
                            type="number" 
                            bind:value={adminForms.addShareOwner.amount}
                            placeholder="Amount"
                            class="p-2 border rounded"
                        />
                        <input 
                            type="text" 
                            bind:value={adminForms.addShareOwner.ownerAddress}
                            placeholder="Owner Address"
                            class="p-2 border rounded"
                        />
                    </div>
                    <button 
                        type="submit"
                        class="mt-2 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600"
                    >
                        Add Owner
                    </button>
                </form>

                <!-- Change Max Shares Form -->
                <form on:submit|preventDefault={changeMaxShares} class="mb-4">
                    <h3 class="text-xl font-semibold mb-2">Change Max Shares</h3>
                    <input 
                        type="number" 
                        bind:value={adminForms.changeMaxShares.newMax}
                        placeholder="New Maximum Shares"
                        class="p-2 border rounded"
                    />
                    <button 
                        type="submit"
                        class="mt-2 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600"
                    >
                        Update Max Shares
                    </button>
                </form>

                <!-- Issue Shares Form -->
                <form on:submit|preventDefault={issueShares}>
                    <h3 class="text-xl font-semibold mb-2">Issue Shares</h3>
                    <input 
                        type="number" 
                        bind:value={adminForms.issueShares.amount}
                        placeholder="Amount to Issue"
                        class="p-2 border rounded"
                    />
                    <button 
                        type="submit"
                        class="mt-2 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600"
                    >
                        Issue Shares
                    </button>
                </form>
            </div>
        {/if}

        <!-- User Functions -->
        <div class="mb-8 p-4 bg-green-50 rounded-lg">
            <h2 class="text-2xl font-bold mb-4">User Functions</h2>
            
            <!-- Transfer Shares Form -->
            <form on:submit|preventDefault={transferShares} class="mb-4">
                <h3 class="text-xl font-semibold mb-2">Transfer Shares</h3>
                <div class="grid grid-cols-3 gap-4">
                    <input 
                        type="number" 
                        bind:value={userForms.transferShares.amount}
                        placeholder="Amount"
                        class="p-2 border rounded"
                    />
                    <input 
                        type="text" 
                        bind:value={userForms.transferShares.destination}
                        placeholder="Destination Address"
                        class="p-2 border rounded"
                    />
                    <input 
                        type="text" 
                        bind:value={userForms.transferShares.share}
                        placeholder="Share Address"
                        class="p-2 border rounded"
                    />
                </div>
                <button 
                    type="submit"
                    class="mt-2 px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600"
                >
                    Transfer Shares
                </button>
            </form>

            <!-- Claim Shares Form -->
            <form on:submit|preventDefault={claimShares}>
                <h3 class="text-xl font-semibold mb-2">Claim Shares</h3>
                <input 
                    type="text" 
                    bind:value={userForms.claimShares.address}
                    placeholder="Address"
                    class="p-2 border rounded"
                />
                <button 
                    type="submit"
                    class="mt-2 px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600"
                >
                    Claim Shares
                </button>
            </form>
        </div>
    {/if}
</div>

<style>
    
</style>

================
File: src/lib/TestGlobal.svelte
================
<div class="flex flex-col gap-4 p-6">
  <h2 class="text-2xl font-bold text-primary">Global Styles Test</h2>
  <div class="grid grid-cols-2 gap-4">
    <div class="bg-primary text-primary-foreground p-4 rounded-lg shadow-lg">
      Primary Style Box
    </div>
    <div class="bg-accent border-2 border-accent-foreground p-4 rounded-lg">
      Accent with Border
    </div>
    <div class="bg-destructive text-destructive-foreground p-4 rounded-lg font-bold">
      Destructive Style
    </div>
    <div class="bg-muted ring-2 ring-secondary text-secondary-foreground p-4 rounded-lg">
      Muted with Ring
    </div>
  </div>
</div>

================
File: src/lib/utils.ts
================
import { type ClassValue, clsx } from "clsx";
import { twMerge } from "tailwind-merge";
import { cubicOut } from "svelte/easing";
import type { TransitionConfig } from "svelte/transition";

export function cn(...inputs: ClassValue[]) {
	return twMerge(clsx(inputs));
}

type FlyAndScaleParams = {
	y?: number;
	x?: number;
	start?: number;
	duration?: number;
};

export const flyAndScale = (
	node: Element,
	params: FlyAndScaleParams = { y: -8, x: 0, start: 0.95, duration: 150 }
): TransitionConfig => {
	const style = getComputedStyle(node);
	const transform = style.transform === "none" ? "" : style.transform;

	const scaleConversion = (
		valueA: number,
		scaleA: [number, number],
		scaleB: [number, number]
	) => {
		const [minA, maxA] = scaleA;
		const [minB, maxB] = scaleB;

		const percentage = (valueA - minA) / (maxA - minA);
		const valueB = percentage * (maxB - minB) + minB;

		return valueB;
	};

	const styleToString = (
		style: Record<string, number | string | undefined>
	): string => {
		return Object.keys(style).reduce((str, key) => {
			if (style[key] === undefined) return str;
			return str + `${key}:${style[key]};`;
		}, "");
	};

	return {
		duration: params.duration ?? 200,
		delay: 0,
		css: (t) => {
			const y = scaleConversion(t, [0, 1], [params.y ?? 5, 0]);
			const x = scaleConversion(t, [0, 1], [params.x ?? 0, 0]);
			const scale = scaleConversion(t, [0, 1], [params.start ?? 0.95, 1]);

			return styleToString({
				transform: `${transform} translate3d(${x}px, ${y}px, 0) scale(${scale})`,
				opacity: t
			});
		},
		easing: cubicOut
	};
};

================
File: src/lib/WalletConnector.svelte
================
<script lang="ts">
    import { onMount } from 'svelte';
    import { TezosToolkit } from '@taquito/taquito';
    import { TempleWallet } from '@temple-wallet/dapp';

    export const tezSym: string ='ꜩ';

    interface WalletData {
        wallet: TempleWallet | null;
        Tezos: TezosToolkit | null;
        userAddress: string | null;
        wbalance: string | null;
        walletDataAvailable: boolean;
    }

    export const walletState = $state<WalletData>({
        wallet: null,
        Tezos: null,
        userAddress: null,
        wbalance: null,
        walletDataAvailable: false
    });
    
    let Tezos: TezosToolkit = new TezosToolkit('https://ghostnet.smartpy.io');
    const wallet = new TempleWallet('TokenShare');

    onMount(async () => {
      try {
        const available = await TempleWallet.isAvailable();
        if (!available) throw new Error('Temple Wallet not installed');
        
        await wallet.connect('ghostnet');
        let userAddress = await wallet.getPKH();
        let balance = await getWalletBalance(userAddress);
      
        
        walletState.wallet = wallet;
        walletState.Tezos = wallet.toTezos();
        walletState.userAddress = userAddress;
        walletState.wbalance = balance.toFixed(2);;
        walletState.walletDataAvailable = true;

      } catch (err) {
        console.error(err);
        walletState.walletDataAvailable = false;
      }
    });

    async function getWalletBalance(address: string): Promise<number> {
        try {
            const balance = await Tezos.tz.getBalance(address);
            return balance.toNumber() / 1000000;
        } catch (error) {
            console.error("Failed to fetch balance:", error);
            return 0;
        }
    }


</script>

<div>
     <!-- Wallet Info -->
     <div class="mb-8 p-4 bg-gray-100 rounded-lg">
        <h2 class="text-2xl font-bold mb-4">Wallet Information</h2>
        {#if walletState.walletDataAvailable}
            <div class="grid grid-cols-5 gap-4">
                <div class="col-span-4">
                    <span class="font-semibold">Address:</span> 
                    <span class="font-mono">{walletState.userAddress}</span>
                </div>
                <div class="flex justify-end">
                    <span class="font-semibold">Balance:</span> 
                    <span>{walletState.wbalance} {tezSym}</span>
                </div>
            </div>
        {:else}
            <p>Loading wallet data...</p>
        {/if}
    </div>
</div>

================
File: src/lib/WalletConnectorBeacon.svelte
================
<script lang="ts">
    import { onMount, onDestroy } from 'svelte';
    import { BeaconEvent } from '@airgap/beacon-sdk';
    import { beaconState, beaconClient, connectWallet, disconnectWallet, checkExistingConnection } from './stores/beaconStore.svelte';

    export const tezSym: string = 'ꜩ';

    // Set up the event subscription immediately
    beaconClient.subscribeToEvent(BeaconEvent.ACTIVE_ACCOUNT_SET, async (account) => {
        console.log(
            `${BeaconEvent.ACTIVE_ACCOUNT_SET} triggered: `,
            account,
            account?.address,
        );
        if (!account) {
            return;
        }

        try {
            await beaconClient.requestSignPayload({
                payload: "05010000004254657a6f73205369676e6564204d6573736167653a207465737455726c20323032332d30322d30385431303a33363a31382e3435345a2048656c6c6f20576f726c64",
            });
        } catch (err: any) {
            // The request was rejected
            disconnectWallet();
        }
    });

    onMount(async () => {
        // Check for existing connection first, don't prompt if already connected
        await checkExistingConnection();
    });

    onDestroy(() => {
        if (beaconState.isConnected) {
            disconnectWallet().catch(console.error);
        }
    });
</script>

<div class="container mx-auto p-4 bg-gray-100 rounded-md">
    <h2 class="text-2xl font-bold mb-4">Wallet Information</h2>
    {#if beaconState.error}
        <div class="p-4 mb-4 bg-red-100 text-red-700 rounded-lg">
            {beaconState.error}
        </div>
    {/if}

    {#if beaconState.isConnected}
        <div class="grid grid-cols-5 gap-4">
            <div class="col-span-4">
                <span class="font-semibold">Address:</span>
                <span class="font-mono">{beaconState.address}</span> 
            </div>
            <div class="flex justify-end">
                <span class="font-semibold">Balance:</span>
                <span>{beaconState.wbalance} {tezSym}</span>
            </div>
            
            <button 
                class="px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600"
                onclick={disconnectWallet}
            >
                Disconnect
            </button>
        </div>
    {:else}
        <button 
            class="px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600"
            onclick={connectWallet}
        >
            Connect Wallet
        </button>
    {/if}
</div>

================
File: src/app.css
================
@tailwind base;
@tailwind components;
@tailwind utilities;
 
@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;
 
    --muted: 210 40% 96.1%;
    --muted-foreground: 215.4 16.3% 46.9%;
 
    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;
 
    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;
 
    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
 
    --primary: 222.2 47.4% 11.2%;
    --primary-foreground: 210 40% 98%;
 
    --secondary: 210 40% 96.1%;
    --secondary-foreground: 222.2 47.4% 11.2%;
 
    --accent: 210 40% 96.1%;
    --accent-foreground: 222.2 47.4% 11.2%;
 
    --destructive: 0 72.2% 50.6%;
    --destructive-foreground: 210 40% 98%;
 
    --ring: 222.2 84% 4.9%;
 
    --radius: 0.5rem;
  }
 
  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;
 
    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;
 
    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;
 
    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;
 
    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
 
    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;
 
    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;
 
    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;
 
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;
 
    --ring: 212.7 26.8% 83.9%;
  }
}
 
@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

================
File: src/App.svelte
================
<script lang="ts">

  import TestGlobal from './lib/TestGlobal.svelte'

  import WalletConnectorBeacon from './lib/WalletConnectorBeacon.svelte'

  import ContractLoader from '$lib/ContractLoader.svelte';

</script>

<main class="min-h-screen bg-gray-400 p-4 flex flex-col">
  <div class="flex-grow-0">

    <h1 class="text-3xl font-bold text-blue-600">TokenShare</h1>



    <div class="mt-4">
      <WalletConnectorBeacon />
    </div>

    <div>
      <ContractLoader />
    </div>


     
  </div>
  
  <div class="mt-auto">
    <TestGlobal />
  </div>
</main>

<style>


</style>

================
File: src/main.ts
================
import { Buffer } from 'buffer'
window.Buffer = Buffer
globalThis.Buffer = Buffer

import { mount } from 'svelte'
import './app.css'
import App from './App.svelte'

// Correct Svelte 5 mounting syntax
mount(App, {
  target: document.getElementById('app')!
})

// If you need to export the app instance
export default App

================
File: src/vite-env.d.ts
================
/// <reference types="svelte" />
/// <reference types="vite/client" />

================
File: .gitignore
================
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

node_modules
dist
dist-ssr
*.local

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?

================
File: components.json
================
{
	"$schema": "https://shadcn-svelte.com/schema.json",
	"style": "default",
	"tailwind": {
		"config": "tailwind.config.ts",
		"css": "src/app.{p,post}css",
		"baseColor": "slate"
	},
	"aliases": {
		"components": "$lib/components",
		"utils": "$lib/utils"
	},
	"typescript": true
}

================
File: index.html
================
<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>TokenShare</title>
  </head>
  <body>
    <div id="app"></div>
    <script type="module" src="/src/main.ts"></script>
  </body>
</html>

================
File: package.json
================
{
  "name": "governance-contract-front",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "preview": "vite preview",
    "check": "svelte-check --tsconfig ./tsconfig.json && tsc -p tsconfig.node.json"
  },
  "devDependencies": {
    "@sveltejs/vite-plugin-svelte": "^5.0.0",
    "@tsconfig/svelte": "^5.0.4",
    "@types/node": "^22.10.2",
    "autoprefixer": "^10.4.20",
    "clsx": "^2.1.1",
    "events": "^3.3.0",
    "stream-browserify": "^3.0.0",
    "svelte": "^5.2.7",
    "svelte-check": "^4.1.0",
    "tailwind-merge": "^2.5.5",
    "tailwind-variants": "^0.3.0",
    "tailwindcss": "^3.4.9",
    "tslib": "^2.8.1",
    "typescript": "~5.6.2",
    "util": "^0.12.5",
    "vite": "^6.0.6"
  },
  "dependencies": {
    "@airgap/beacon-dapp": "^4.3.1",
    "@airgap/beacon-sdk": "^4.3.1",
    "@tailwindcss/container-queries": "^0.1.1",
    "@tailwindcss/forms": "^0.5.9",
    "@tailwindcss/typography": "^0.5.15",
    "@taquito/beacon-wallet": "^20.1.2",
    "@taquito/taquito": "^17.5.2",
    "@temple-wallet/dapp": "^8.0.0",
    "buffer": "^6.0.3"
  }
}

================
File: postcss.config.js
================
export default {
  plugins: {
    tailwindcss: {},
    autoprefixer: {}
  }
};

================
File: README.md
================
# Svelte + TS + Vite

This template should help get you started developing with Svelte and TypeScript in Vite.

## Recommended IDE Setup

[VS Code](https://code.visualstudio.com/) + [Svelte](https://marketplace.visualstudio.com/items?itemName=svelte.svelte-vscode).

## Need an official Svelte framework?

Check out [SvelteKit](https://github.com/sveltejs/kit#readme), which is also powered by Vite. Deploy anywhere with its serverless-first approach and adapt to various platforms, with out of the box support for TypeScript, SCSS, and Less, and easily-added support for mdsvex, GraphQL, PostCSS, Tailwind CSS, and more.

## Technical considerations

**Why use this over SvelteKit?**

- It brings its own routing solution which might not be preferable for some users.
- It is first and foremost a framework that just happens to use Vite under the hood, not a Vite app.

This template contains as little as possible to get started with Vite + TypeScript + Svelte, while taking into account the developer experience with regards to HMR and intellisense. It demonstrates capabilities on par with the other `create-vite` templates and is a good starting point for beginners dipping their toes into a Vite + Svelte project.

Should you later need the extended capabilities and extensibility provided by SvelteKit, the template has been structured similarly to SvelteKit so that it is easy to migrate.

**Why `global.d.ts` instead of `compilerOptions.types` inside `jsconfig.json` or `tsconfig.json`?**

Setting `compilerOptions.types` shuts out all other types not explicitly listed in the configuration. Using triple-slash references keeps the default TypeScript setting of accepting type information from the entire workspace, while also adding `svelte` and `vite/client` type information.

**Why include `.vscode/extensions.json`?**

Other templates indirectly recommend extensions via the README, but this file allows VS Code to prompt the user to install the recommended extension upon opening the project.

**Why enable `allowJs` in the TS template?**

While `allowJs: false` would indeed prevent the use of `.js` files in the project, it does not prevent the use of JavaScript syntax in `.svelte` files. In addition, it would force `checkJs: false`, bringing the worst of both worlds: not being able to guarantee the entire codebase is TypeScript, and also having worse typechecking for the existing JavaScript. In addition, there are valid use cases in which a mixed codebase may be relevant.

**Why is HMR not preserving my local component state?**

HMR state preservation comes with a number of gotchas! It has been disabled by default in both `svelte-hmr` and `@sveltejs/vite-plugin-svelte` due to its often surprising behavior. You can read the details [here](https://github.com/rixo/svelte-hmr#svelte-hmr).

If you have state that's important to retain within a component, consider creating an external store which would not be replaced by HMR.

```ts
// store.ts
// An extremely simple external store
import { writable } from 'svelte/store'
export default writable(0)
```

================
File: svelte.config.js
================
import { vitePreprocess } from '@sveltejs/vite-plugin-svelte'

export default {
  // Consult https://svelte.dev/docs#compile-time-svelte-preprocess
  // for more information about preprocessors
  preprocess: vitePreprocess(),
}

================
File: tailwind.config.ts
================
import { fontFamily } from "tailwindcss/defaultTheme";
import type { Config } from "tailwindcss";

const config: Config = {
	darkMode: ["class"],
	content: ["./src/**/*.{html,js,svelte,ts}"],
	safelist: ["dark"],
	theme: {
		container: {
			center: true,
			padding: "2rem",
			screens: {
				"2xl": "1400px"
			}
		},
		extend: {
			colors: {
				border: "hsl(var(--border) / <alpha-value>)",
				input: "hsl(var(--input) / <alpha-value>)",
				ring: "hsl(var(--ring) / <alpha-value>)",
				background: "hsl(var(--background) / <alpha-value>)",
				foreground: "hsl(var(--foreground) / <alpha-value>)",
				primary: {
					DEFAULT: "hsl(var(--primary) / <alpha-value>)",
					foreground: "hsl(var(--primary-foreground) / <alpha-value>)"
				},
				secondary: {
					DEFAULT: "hsl(var(--secondary) / <alpha-value>)",
					foreground: "hsl(var(--secondary-foreground) / <alpha-value>)"
				},
				destructive: {
					DEFAULT: "hsl(var(--destructive) / <alpha-value>)",
					foreground: "hsl(var(--destructive-foreground) / <alpha-value>)"
				},
				muted: {
					DEFAULT: "hsl(var(--muted) / <alpha-value>)",
					foreground: "hsl(var(--muted-foreground) / <alpha-value>)"
				},
				accent: {
					DEFAULT: "hsl(var(--accent) / <alpha-value>)",
					foreground: "hsl(var(--accent-foreground) / <alpha-value>)"
				},
				popover: {
					DEFAULT: "hsl(var(--popover) / <alpha-value>)",
					foreground: "hsl(var(--popover-foreground) / <alpha-value>)"
				},
				card: {
					DEFAULT: "hsl(var(--card) / <alpha-value>)",
					foreground: "hsl(var(--card-foreground) / <alpha-value>)"
				}
			},
			borderRadius: {
				lg: "var(--radius)",
				md: "calc(var(--radius) - 2px)",
				sm: "calc(var(--radius) - 4px)"
			},
			fontFamily: {
				sans: [...fontFamily.sans]
			}
		}
	},
};

export default config;

================
File: tsconfig.json
================
{
  "extends": "./node_modules/@tsconfig/svelte/tsconfig.json",
  "compilerOptions": {
    "baseUrl": ".",
    "paths": {
      "$lib": ["./src/lib"],
      "$lib/*": ["./src/lib/*"]
    },
    "target": "ESNext",
    "useDefineForClassFields": true,
    "module": "ESNext",
    "resolveJsonModule": true,
    "allowJs": true,
    "checkJs": true,
    "isolatedModules": true,
    "moduleDetection": "force",
    "types": ["node", "@taquito/taquito"],
    "moduleResolution": "node"
  },
  "include": ["src/**/*.ts", "src/**/*.js", "src/**/*.svelte"],
  "references": [{ "path": "./tsconfig.node.json" }]
}

================
File: tsconfig.node.json
================
{
  "compilerOptions": {
    "composite": true,
    "tsBuildInfoFile": "./node_modules/.tmp/tsconfig.node.tsbuildinfo",
    "skipLibCheck": true,
    "module": "ESNext",
    "moduleResolution": "bundler",
    "strict": true,
    "emitDeclarationOnly": true,
    "noUncheckedSideEffectImports": true
  },
  "include": ["vite.config.ts"]
}

================
File: vite.config.d.ts
================
declare const _default: import("vite").UserConfig;
export default _default;

================
File: vite.config.ts
================
import { defineConfig } from 'vite'
import { svelte } from '@sveltejs/vite-plugin-svelte'
import path from "path";

// https://vite.dev/config/
export default defineConfig({
  plugins: [svelte()],
  css: {
    postcss: './postcss.config.js',
  },
  resolve: {
    alias: {
      $lib: path.resolve("./src/lib"),
      buffer: 'buffer/',
      stream: 'stream-browserify',
      util: 'util/',
      events: 'events',
    },
  },
  optimizeDeps: {
    include: ['buffer', 'events', 'util', 'stream-browserify']
  },
  define: {
    'process.env': {},
    global: {},
  }
})
